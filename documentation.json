{
    "pipes": [],
    "interfaces": [
        {
            "name": "ICellCompareDto",
            "id": "interface-ICellCompareDto-b599eecd435a6dfc35c8b2797d5e3f69",
            "file": "src/app/feature/table/entitites/cell-compare.dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ICellCompareDto {\r\n    productId: number;\r\n    runTypeId: number;\r\n    inputId: number;\r\n    sourceModelParamId: number;\r\n    targetModelParamId: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "runTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "sourceModelParamId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "targetModelParamId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ICellDefinition",
            "id": "interface-ICellDefinition-d405c40ef39b77a18a9d2e01ad650e49",
            "file": "src/app/feature/table/interfaces/table-data.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TableData {}\r\n\r\nexport enum TableMode {\r\n    ReadOnly,\r\n    Edit,\r\n    Validate\r\n}\r\n\r\nexport enum CellType {\r\n    Category,\r\n    Input,\r\n    EmptyCell,\r\n    Cell\r\n}\r\n\r\nexport interface ICellDefinition {\r\n    productId: number;\r\n    runTypeId?: number;\r\n    inputId: number;\r\n    modelParamId?: number;\r\n    className: string;\r\n    text?: string;\r\n    type: CellType;\r\n    inputTypeId: number;\r\n    active?: boolean;\r\n    select?: boolean;\r\n    validate?: boolean | null;\r\n}\r\n\r\nexport interface IInputProductTable {\r\n    id: number;\r\n    group: string;\r\n    category: string;\r\n    order: number;\r\n    input_name: ICellDefinition;\r\n    input_category: ICellDefinition;\r\n    [key: string]: ICellDefinition | string | number;\r\n}\r\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "inputTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "modelParamId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "runTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "select",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CellType",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "validate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": true,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ICellDto",
            "id": "interface-ICellDto-35b5bb65d917c702aac71f954bfc3a2b",
            "file": "src/app/feature/table/entitites/cell.dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ICellDto {\r\n    productId: number;\r\n    runTypeId: number;\r\n    modelParamId: number;\r\n    inputId: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "modelParamId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "runTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "IInputProductTable",
            "id": "interface-IInputProductTable-d405c40ef39b77a18a9d2e01ad650e49",
            "file": "src/app/feature/table/interfaces/table-data.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TableData {}\r\n\r\nexport enum TableMode {\r\n    ReadOnly,\r\n    Edit,\r\n    Validate\r\n}\r\n\r\nexport enum CellType {\r\n    Category,\r\n    Input,\r\n    EmptyCell,\r\n    Cell\r\n}\r\n\r\nexport interface ICellDefinition {\r\n    productId: number;\r\n    runTypeId?: number;\r\n    inputId: number;\r\n    modelParamId?: number;\r\n    className: string;\r\n    text?: string;\r\n    type: CellType;\r\n    inputTypeId: number;\r\n    active?: boolean;\r\n    select?: boolean;\r\n    validate?: boolean | null;\r\n}\r\n\r\nexport interface IInputProductTable {\r\n    id: number;\r\n    group: string;\r\n    category: string;\r\n    order: number;\r\n    input_name: ICellDefinition;\r\n    input_category: ICellDefinition;\r\n    [key: string]: ICellDefinition | string | number;\r\n}\r\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "input_category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICellDefinition",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "input_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICellDefinition",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "order",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [
                {
                    "id": "index-declaration-d405c40ef39b77a18a9d2e01ad650e49",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ICellDefinition | string | number",
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 172,
            "methods": []
        },
        {
            "name": "IProductColumns",
            "id": "interface-IProductColumns-0bb44799d52e72d778224dc0a1bb5279",
            "file": "src/app/feature/table/interfaces/table.config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IStickyColumns {\r\n    [key: string]: string;\r\n}\r\n\r\nexport interface IProductColumns {\r\n    [key: string]: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n    stickyColumns: string[];\r\n}\r\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-0bb44799d52e72d778224dc0a1bb5279",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 172,
            "methods": []
        },
        {
            "name": "IStickyColumns",
            "id": "interface-IStickyColumns-0bb44799d52e72d778224dc0a1bb5279",
            "file": "src/app/feature/table/interfaces/table.config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IStickyColumns {\r\n    [key: string]: string;\r\n}\r\n\r\nexport interface IProductColumns {\r\n    [key: string]: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n    stickyColumns: string[];\r\n}\r\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-0bb44799d52e72d778224dc0a1bb5279",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "line": 1,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 172,
            "methods": []
        },
        {
            "name": "ITableConfig",
            "id": "interface-ITableConfig-0bb44799d52e72d778224dc0a1bb5279",
            "file": "src/app/feature/table/interfaces/table.config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IStickyColumns {\r\n    [key: string]: string;\r\n}\r\n\r\nexport interface IProductColumns {\r\n    [key: string]: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n    stickyColumns: string[];\r\n}\r\n",
            "properties": [
                {
                    "name": "stickyColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ITableHeader",
            "id": "interface-ITableHeader-a72e8c5967a4272dd5a059498f353236",
            "file": "src/app/feature/table/interfaces/table-header.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProductHeader {\r\n    id: number;\r\n    name: string;\r\n    col: string;\r\n}\r\n\r\nexport interface ITableHeader {\r\n    id: number;\r\n    category: string;\r\n    categoryIdentifier: string;\r\n    hide: boolean;\r\n    colspan: number;\r\n    products: ProductHeader[];\r\n}\r\n\r\nexport interface RowTable {\r\n    input: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "categoryIdentifier",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "colspan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "hide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductHeader[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ProductHeader",
            "id": "interface-ProductHeader-a72e8c5967a4272dd5a059498f353236",
            "file": "src/app/feature/table/interfaces/table-header.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProductHeader {\r\n    id: number;\r\n    name: string;\r\n    col: string;\r\n}\r\n\r\nexport interface ITableHeader {\r\n    id: number;\r\n    category: string;\r\n    categoryIdentifier: string;\r\n    hide: boolean;\r\n    colspan: number;\r\n    products: ProductHeader[];\r\n}\r\n\r\nexport interface RowTable {\r\n    input: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "col",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "RowTable",
            "id": "interface-RowTable-a72e8c5967a4272dd5a059498f353236",
            "file": "src/app/feature/table/interfaces/table-header.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProductHeader {\r\n    id: number;\r\n    name: string;\r\n    col: string;\r\n}\r\n\r\nexport interface ITableHeader {\r\n    id: number;\r\n    category: string;\r\n    categoryIdentifier: string;\r\n    hide: boolean;\r\n    colspan: number;\r\n    products: ProductHeader[];\r\n}\r\n\r\nexport interface RowTable {\r\n    input: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "tableConfig",
            "id": "interface-tableConfig-7b9f0fe3fc20f06e8b0c72a5462d9e24",
            "file": "src/app/feature/table/interfaces/table-configuration.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface tableConfig {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "TableData",
            "id": "interface-TableData-d405c40ef39b77a18a9d2e01ad650e49",
            "file": "src/app/feature/table/interfaces/table-data.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TableData {}\r\n\r\nexport enum TableMode {\r\n    ReadOnly,\r\n    Edit,\r\n    Validate\r\n}\r\n\r\nexport enum CellType {\r\n    Category,\r\n    Input,\r\n    EmptyCell,\r\n    Cell\r\n}\r\n\r\nexport interface ICellDefinition {\r\n    productId: number;\r\n    runTypeId?: number;\r\n    inputId: number;\r\n    modelParamId?: number;\r\n    className: string;\r\n    text?: string;\r\n    type: CellType;\r\n    inputTypeId: number;\r\n    active?: boolean;\r\n    select?: boolean;\r\n    validate?: boolean | null;\r\n}\r\n\r\nexport interface IInputProductTable {\r\n    id: number;\r\n    group: string;\r\n    category: string;\r\n    order: number;\r\n    input_name: ICellDefinition;\r\n    input_category: ICellDefinition;\r\n    [key: string]: ICellDefinition | string | number;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "DemoTableService",
            "id": "injectable-DemoTableService-0f5c8c720eeef0e3ee0ac6056d07ba77",
            "file": "src/app/feature/table/services/demo-table.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCell",
                    "args": [],
                    "optional": false,
                    "returnType": "ICellDto[]",
                    "typeParameters": [],
                    "line": 397,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCellCompare",
                    "args": [],
                    "optional": false,
                    "returnType": "ICellCompareDto[]",
                    "typeParameters": [],
                    "line": 443,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getInput",
                    "args": [],
                    "optional": false,
                    "returnType": "InputDto[]",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "ProductDto[]",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ICellCompareDto } from '../entitites/cell-compare.dto';\r\nimport { ICellDto } from '../entitites/cell.dto';\r\nimport { InputDto } from '../entitites/input.dto';\r\nimport { ProductDto } from '../entitites/product.dto';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DemoTableService {\r\n    constructor() {}\r\n\r\n    getProduct(): ProductDto[] {\r\n        return [\r\n            { id: 27, name: 'D_HL_RENRP', categoryName: 'Unit Linked' },\r\n            { id: 28, name: 'D_HL_RENSP', categoryName: 'Unit Linked' },\r\n            { id: 29, name: 'DRENRP', categoryName: 'Unit Linked' },\r\n            { id: 30, name: 'DRENSP', categoryName: 'Unit Linked' },\r\n            { id: 31, name: 'D_HL_KAOTH', categoryName: 'Unit Linked' },\r\n            { id: 32, name: 'DKAGRU', categoryName: 'Unit Linked' },\r\n            { id: 33, name: 'DKAOTH', categoryName: 'Unit Linked' },\r\n            { id: 34, name: 'DKAVBG', categoryName: 'Unit Linked' },\r\n            { id: 35, name: 'P_BUN', categoryName: 'Unit Linked' },\r\n            { id: 36, name: 'P_HL_BUN', categoryName: 'Unit Linked' },\r\n            { id: 37, name: 'D_HL_RISK', categoryName: 'Unit Linked' },\r\n            { id: 38, name: 'D_RISK', categoryName: 'Unit Linked' },\r\n            { id: 39, name: 'D_RSV', categoryName: 'Unit Linked' },\r\n            { id: 40, name: 'D_FRV', categoryName: 'Non Unit Linked' },\r\n            { id: 41, name: 'D_HL_FRV', categoryName: 'Non Unit Linked' },\r\n            { id: 42, name: 'D_HL_FLV97', categoryName: 'Non Unit Linked' },\r\n            { id: 43, name: 'DFLV97', categoryName: 'Non Unit Linked' }\r\n        ];\r\n    }\r\n\r\n    getInput(): InputDto[] {\r\n        return [\r\n            {\r\n                id: 1,\r\n                name: 'MortalityRatesMale',\r\n                typeId: 1,\r\n                categoryName: 'SomeCategory'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'MortalityRatesFemale',\r\n                typeId: 1,\r\n                categoryName: 'SomeCategory'\r\n            },\r\n            { id: 7, name: 'LapseRates', typeId: 1, categoryName: 'SomeCategory' },\r\n            { id: 8, name: 'ProductValues', typeId: 1, categoryName: 'SomeCategory' },\r\n            { id: 9, name: 'Gamma', typeId: 1, categoryName: 'SomeCategory' },\r\n            { id: 10, name: 'AlphaGamma', typeId: 1, categoryName: 'SomeCategory' },\r\n            { id: 11, name: 'PolicyFees', typeId: 1, categoryName: 'SomeCategory' },\r\n            { id: 12, name: 'SurrenderFactor', typeId: 1, categoryName: 'SomeCategory' },\r\n            {\r\n                id: 13,\r\n                name: 'ExperiencedMortalityRatesMale',\r\n                typeId: 1,\r\n                categoryName: 'SomeCategory'\r\n            },\r\n            {\r\n                id: 14,\r\n                name: 'ExperiencedMortalityRatesFemale',\r\n                typeId: 1,\r\n                categoryName: 'SomeCategory'\r\n            },\r\n            {\r\n                id: 15,\r\n                name: 'TechnicalInterestRates',\r\n                typeId: 1,\r\n                categoryName: 'SomeCategory'\r\n            },\r\n            {\r\n                id: 16,\r\n                name: 'AgeAdjustmentsMale',\r\n                typeId: 1,\r\n                categoryName: 'SomeCategory'\r\n            },\r\n            {\r\n                id: 17,\r\n                name: 'AgeAdjustmentsFemale',\r\n                typeId: 1,\r\n                categoryName: 'SomeCategory'\r\n            },\r\n            {\r\n                id: 18,\r\n                name: 'MathsReserveBonusPercentage',\r\n                typeId: 1,\r\n                categoryName: 'SomeCategory'\r\n            },\r\n            {\r\n                id: 19,\r\n                name: 'RecoveryRatesMale',\r\n                typeId: 1,\r\n                categoryName: 'SomeCategory'\r\n            },\r\n            {\r\n                id: 20,\r\n                name: 'RecoveryRatesFemale',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            {\r\n                id: 21,\r\n                name: 'ClaimMortalityRatesMale',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            {\r\n                id: 22,\r\n                name: 'ClaimMortalityRatesFemale',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            { id: 23, name: 'InceptionRatesMale', typeId: 1, categoryName: 'Category A' },\r\n            {\r\n                id: 24,\r\n                name: 'InceptionRatesFemale',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            {\r\n                id: 25,\r\n                name: 'ExperiencedInceptionRatesMale',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            {\r\n                id: 26,\r\n                name: 'ExperiencedInceptionRatesFemale',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            {\r\n                id: 27,\r\n                name: 'ProfitSharePercentage',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            {\r\n                id: 28,\r\n                name: 'ProfitSharePercentageRider',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            { id: 29, name: 'MultiplierAnsatz', typeId: 1, categoryName: 'Category A' },\r\n            { id: 30, name: 'Alpha', typeId: 1, categoryName: 'Category A' },\r\n            {\r\n                id: 31,\r\n                name: 'ProfitSharingPremiumPercentage',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            { id: 32, name: 'MortalityFactors', typeId: 1, categoryName: 'Category A' },\r\n            {\r\n                id: 33,\r\n                name: 'AdditionalReserveFactors',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            { id: 34, name: 'AdvisorSurcharges', typeId: 1, categoryName: 'Category A' },\r\n            { id: 35, name: 'AssumptionValues', typeId: 1, categoryName: 'Category A' },\r\n            {\r\n                id: 36,\r\n                name: 'DepositAccountInterestRate',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            { id: 38, name: 'MortalityEndAges', typeId: 1, categoryName: 'Category A' },\r\n            {\r\n                id: 39,\r\n                name: 'MortalitySelectFactors',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            {\r\n                id: 40,\r\n                name: 'NonGuaranteedBonusPercentages',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            {\r\n                id: 41,\r\n                name: 'ReferenceValueFactorPercentages',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            {\r\n                id: 42,\r\n                name: 'ReferenceValueOfBonusRates',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            {\r\n                id: 43,\r\n                name: 'ReferenceValueOfChargeRates',\r\n                typeId: 1,\r\n                categoryName: 'Category A'\r\n            },\r\n            {\r\n                id: 44,\r\n                name: 'RunSetup',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 45,\r\n                name: 'SinglePremiumRatingFactorsFemale',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 46,\r\n                name: 'SinglePremiumRatingFactorsHeaders',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 47,\r\n                name: 'SinglePremiumRatingFactorsMale',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 48,\r\n                name: 'SumAssuredFactors',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 49,\r\n                name: 'SumAssuredThresholds',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 50,\r\n                name: 'SurrenderFactor1',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 51,\r\n                name: 'SurrenderFactor2',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 52,\r\n                name: 'TariffMapping',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 53,\r\n                name: 'TerminalCostDistributionTerm',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            { id: 54, name: 'Beta', typeId: 1, categoryName: 'ModelParameters' },\r\n            {\r\n                id: 55,\r\n                name: 'PartPaymentPercentages',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 56,\r\n                name: 'PartPaymentYears',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            { id: 57, name: 'PupFactor', typeId: 1, categoryName: 'ModelParameters' },\r\n            {\r\n                id: 58,\r\n                name: 'ZzrDiscountRates',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 59,\r\n                name: 'ZzrScalingFactors',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 60,\r\n                name: 'MaximumZillmerTerm',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 61,\r\n                name: 'TerminalBonusPercentages',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 62,\r\n                name: 'TerminalBonusPercentagesRider',\r\n                typeId: 2,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 63,\r\n                name: 'CommissionPercentages',\r\n                typeId: 2,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 64,\r\n                name: 'SurrenderValuePercentages',\r\n                typeId: 2,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 65,\r\n                name: 'SurrenderValuePercentagesRider',\r\n                typeId: 2,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 66,\r\n                name: 'ExpenseAssumptions',\r\n                typeId: 2,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            { id: 67, name: 'LapseRatesRsv', typeId: 1, categoryName: 'ModelParameters' },\r\n            {\r\n                id: 68,\r\n                name: 'ScalingFactors',\r\n                typeId: 1,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 69,\r\n                name: 'LapseRatesUpShock',\r\n                typeId: 2,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 70,\r\n                name: 'LapseRatesDownShock',\r\n                typeId: 2,\r\n                categoryName: 'ModelParameters'\r\n            },\r\n            {\r\n                id: 71,\r\n                name: 'BalanceSheetReserveHgb',\r\n                typeId: 1,\r\n                categoryName: 'Assumptions'\r\n            },\r\n            {\r\n                id: 72,\r\n                name: 'InputForwardRateYieldCurve',\r\n                typeId: 1,\r\n                categoryName: 'Assumptions'\r\n            },\r\n            {\r\n                id: 73,\r\n                name: 'AnnualAverageYield',\r\n                typeId: 1,\r\n                categoryName: 'Assumptions'\r\n            },\r\n            {\r\n                id: 74,\r\n                name: 'ZzrDiscountRateForPreviousYear',\r\n                typeId: 2,\r\n                categoryName: 'Assumptions'\r\n            },\r\n            {\r\n                id: 75,\r\n                name: 'TargetAssetAllocation',\r\n                typeId: 2,\r\n                categoryName: 'Assumptions'\r\n            },\r\n            { id: 76, name: 'AssetExpenseInput', typeId: 2, categoryName: 'Assumptions' },\r\n            {\r\n                id: 77,\r\n                name: 'ShareholderReplenishmentSplit',\r\n                typeId: 2,\r\n                categoryName: 'Assumptions'\r\n            },\r\n            {\r\n                id: 78,\r\n                name: 'AssetExpenseShockInput',\r\n                typeId: 2,\r\n                categoryName: 'Assumptions'\r\n            },\r\n            {\r\n                id: 79,\r\n                name: 'ManagementModel',\r\n                typeId: 1,\r\n                categoryName: 'Assumptions'\r\n            }\r\n        ];\r\n    }\r\n\r\n    getCell(): ICellDto[] {\r\n        return [\r\n            { productId: 27, runTypeId: 7, modelParamId: 69, inputId: 2 },\r\n            { productId: 27, runTypeId: 7, modelParamId: 70, inputId: 3 },\r\n            { productId: 27, runTypeId: 7, modelParamId: 69, inputId: 7 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 99, inputId: 1 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 98, inputId: 2 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 100, inputId: 7 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 92, inputId: 8 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 101, inputId: 9 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 103, inputId: 10 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 102, inputId: 11 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 104, inputId: 12 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 94, inputId: 13 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 93, inputId: 14 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 95, inputId: 15 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 97, inputId: 16 },\r\n            { productId: 31, runTypeId: 7, modelParamId: 96, inputId: 17 },\r\n            { productId: 32, runTypeId: 7, modelParamId: 106, inputId: 1 },\r\n            { productId: 32, runTypeId: 7, modelParamId: 105, inputId: 2 },\r\n            { productId: 32, runTypeId: 7, modelParamId: 109, inputId: 8 },\r\n            { productId: 32, runTypeId: 7, modelParamId: 111, inputId: 9 },\r\n            { productId: 32, runTypeId: 7, modelParamId: 110, inputId: 10 },\r\n            { productId: 32, runTypeId: 7, modelParamId: 102, inputId: 11 },\r\n            { productId: 32, runTypeId: 7, modelParamId: 112, inputId: 12 },\r\n            { productId: 32, runTypeId: 7, modelParamId: 94, inputId: 13 },\r\n            { productId: 32, runTypeId: 7, modelParamId: 93, inputId: 14 },\r\n            { productId: 32, runTypeId: 7, modelParamId: 95, inputId: 15 },\r\n            { productId: 32, runTypeId: 7, modelParamId: 97, inputId: 16 },\r\n            { productId: 32, runTypeId: 7, modelParamId: 96, inputId: 17 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 106, inputId: 1 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 105, inputId: 2 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 107, inputId: 7 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 108, inputId: 8 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 101, inputId: 9 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 103, inputId: 10 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 102, inputId: 11 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 104, inputId: 12 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 94, inputId: 13 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 93, inputId: 14 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 95, inputId: 15 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 97, inputId: 16 },\r\n            { productId: 33, runTypeId: 7, modelParamId: 96, inputId: 17 }\r\n        ];\r\n    }\r\n\r\n    getCellCompare(): ICellCompareDto[] {\r\n        return [\r\n            { productId: 27, runTypeId: 7, inputId: 2, sourceModelParamId: 69, targetModelParamId: 69 },\r\n            { productId: 27, runTypeId: 7, inputId: 3, sourceModelParamId: 70, targetModelParamId: 70 },\r\n            { productId: 27, runTypeId: 7, inputId: 7, sourceModelParamId: 69, targetModelParamId: 69 },\r\n            { productId: 31, runTypeId: 7, inputId: 1, sourceModelParamId: 99, targetModelParamId: 99 },\r\n            { productId: 31, runTypeId: 7, inputId: 2, sourceModelParamId: 98, targetModelParamId: 98 },\r\n            { productId: 31, runTypeId: 7, inputId: 7, sourceModelParamId: 100, targetModelParamId: 100 },\r\n            { productId: 31, runTypeId: 7, inputId: 8, sourceModelParamId: 92, targetModelParamId: 92 },\r\n            { productId: 31, runTypeId: 7, inputId: 9, sourceModelParamId: 101, targetModelParamId: 301 },\r\n            { productId: 31, runTypeId: 7, inputId: 10, sourceModelParamId: 103, targetModelParamId: 103 },\r\n            { productId: 31, runTypeId: 7, inputId: 11, sourceModelParamId: 102, targetModelParamId: 102 },\r\n            { productId: 31, runTypeId: 7, inputId: 12, sourceModelParamId: 104, targetModelParamId: 104 },\r\n            { productId: 31, runTypeId: 7, inputId: 13, sourceModelParamId: 94, targetModelParamId: 154 },\r\n            { productId: 31, runTypeId: 7, inputId: 14, sourceModelParamId: 93, targetModelParamId: 93 },\r\n            { productId: 31, runTypeId: 7, inputId: 15, sourceModelParamId: 95, targetModelParamId: 95 },\r\n            { productId: 31, runTypeId: 7, inputId: 16, sourceModelParamId: 97, targetModelParamId: 97 },\r\n            { productId: 31, runTypeId: 7, inputId: 17, sourceModelParamId: 96, targetModelParamId: 96 },\r\n            { productId: 32, runTypeId: 7, inputId: 1, sourceModelParamId: 106, targetModelParamId: 178 },\r\n            { productId: 32, runTypeId: 7, inputId: 2, sourceModelParamId: 105, targetModelParamId: 105 },\r\n            { productId: 32, runTypeId: 7, inputId: 8, sourceModelParamId: 109, targetModelParamId: 109 },\r\n            { productId: 32, runTypeId: 7, inputId: 9, sourceModelParamId: 111, targetModelParamId: 111 },\r\n            { productId: 32, runTypeId: 7, inputId: 10, sourceModelParamId: 110, targetModelParamId: 110 },\r\n            { productId: 32, runTypeId: 7, inputId: 11, sourceModelParamId: 102, targetModelParamId: 102 },\r\n            { productId: 32, runTypeId: 7, inputId: 12, sourceModelParamId: 112, targetModelParamId: 112 },\r\n            { productId: 32, runTypeId: 7, inputId: 13, sourceModelParamId: 94, targetModelParamId: 99 },\r\n            { productId: 32, runTypeId: 7, inputId: 14, sourceModelParamId: 93, targetModelParamId: 93 },\r\n            { productId: 32, runTypeId: 7, inputId: 15, sourceModelParamId: 95, targetModelParamId: 95 },\r\n            { productId: 32, runTypeId: 7, inputId: 16, sourceModelParamId: 97, targetModelParamId: 97 },\r\n            { productId: 32, runTypeId: 7, inputId: 17, sourceModelParamId: 96, targetModelParamId: 96 },\r\n            { productId: 33, runTypeId: 7, inputId: 1, sourceModelParamId: 106, targetModelParamId: 106 },\r\n            { productId: 33, runTypeId: 7, inputId: 2, sourceModelParamId: 105, targetModelParamId: 111 },\r\n            { productId: 33, runTypeId: 7, inputId: 7, sourceModelParamId: 107, targetModelParamId: 107 },\r\n            { productId: 33, runTypeId: 7, inputId: 8, sourceModelParamId: 108, targetModelParamId: 108 },\r\n            { productId: 33, runTypeId: 7, inputId: 9, sourceModelParamId: 101, targetModelParamId: 101 },\r\n            { productId: 33, runTypeId: 7, inputId: 10, sourceModelParamId: 103, targetModelParamId: 103 },\r\n            { productId: 33, runTypeId: 7, inputId: 11, sourceModelParamId: 102, targetModelParamId: 102 },\r\n            { productId: 33, runTypeId: 7, inputId: 12, sourceModelParamId: 104, targetModelParamId: 104 },\r\n            { productId: 33, runTypeId: 7, inputId: 13, sourceModelParamId: 94, targetModelParamId: 56 },\r\n            { productId: 33, runTypeId: 7, inputId: 14, sourceModelParamId: 93, targetModelParamId: 93 },\r\n            { productId: 33, runTypeId: 7, inputId: 15, sourceModelParamId: 95, targetModelParamId: 95 },\r\n            { productId: 33, runTypeId: 7, inputId: 16, sourceModelParamId: 97, targetModelParamId: 97 },\r\n            { productId: 33, runTypeId: 7, inputId: 1, sourceModelParamId: 96, targetModelParamId: 967 }\r\n        ];\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "TableService",
            "id": "injectable-TableService-5789a2b3fbb703e5bb38b0c07e8c7c69",
            "file": "src/app/feature/table/services/table.service.ts",
            "properties": [
                {
                    "name": "_editCellSubject",
                    "defaultValue": "new BehaviorSubject<any[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_insertCellSubject",
                    "defaultValue": "new BehaviorSubject<any[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_viewCellSubject",
                    "defaultValue": "new BehaviorSubject<any[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "editCellSubject",
                    "defaultValue": "this._editCellSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "insertCellSubject",
                    "defaultValue": "this._insertCellSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "viewCellSubject",
                    "defaultValue": "this._viewCellSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [
                {
                    "name": "communicateEdit",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "communicateInsert",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "communicateView",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "spreedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "TableSpreedData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "TableSpreedData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport enum TableSpreedData {\r\n    Edit,\r\n    Insert,\r\n    View\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TableService {\r\n    private _editCellSubject = new BehaviorSubject<any[]>([]);\r\n    private _insertCellSubject = new BehaviorSubject<any[]>([]);\r\n    private _viewCellSubject = new BehaviorSubject<any[]>([]);\r\n\r\n    editCellSubject = this._editCellSubject.asObservable();\r\n    insertCellSubject = this._insertCellSubject.asObservable();\r\n    viewCellSubject = this._viewCellSubject.asObservable();\r\n\r\n    constructor() {}\r\n\r\n    spreedData(data: any, type: TableSpreedData) {\r\n        switch (type) {\r\n            case TableSpreedData.View:\r\n                this.communicateView(data);\r\n                break;\r\n            case TableSpreedData.Edit:\r\n                this.communicateEdit(data);\r\n                break;\r\n            case TableSpreedData.Insert:\r\n                this.communicateInsert(data);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private communicateView(data: any) {\r\n        this._viewCellSubject.next(data);\r\n    }\r\n\r\n    private communicateEdit(data: any) {\r\n        this._editCellSubject.next(data);\r\n    }\r\n\r\n    private communicateInsert(data: any) {\r\n        this._insertCellSubject.next(data);\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "InputDto",
            "id": "class-InputDto-77f620f55591a3299327edc76e538e53",
            "file": "src/app/feature/table/entitites/input.dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class InputDto {\r\n    id: number;\r\n    name: string;\r\n    categoryName: string;\r\n    typeId: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "categoryName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "typeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ProductDataSource",
            "id": "class-ProductDataSource-1d8d03386920d6fb659e5a21dce9e9cb",
            "file": "src/app/feature/table/table.datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ProductDto } from './entitites/product.dto';\r\nimport { DataSource } from '@angular/cdk/table';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { InputDto } from './entitites/input.dto';\r\nimport { ITableHeader, ProductHeader } from './interfaces/table-header.interface';\r\nimport { ITableConfig } from './interfaces/table.config';\r\n\r\nimport { ICellDefinition, IInputProductTable, CellType, TableMode } from './interfaces/table-data.interface';\r\nimport { ICellDto } from './entitites/cell.dto';\r\nimport { ICellCompareDto } from './entitites/cell-compare.dto';\r\nimport { TableService } from './services/table.service';\r\n\r\nexport class ProductDataSource extends DataSource<IInputProductTable> {\r\n    tableHeader: {\r\n        stickyColumns: string[];\r\n        dynamicColumns?: { name: string; text: string }[];\r\n        displayColumns?: string[];\r\n        categoriesColumns?: ITableHeader[];\r\n        displayCategoriesColumns?: string[];\r\n        expandCategories: boolean;\r\n        expandInputs: boolean;\r\n    };\r\n\r\n    public lessonsSubject = new BehaviorSubject<IInputProductTable[]>([]);\r\n    private loadingSubject = new BehaviorSubject<boolean>(false);\r\n    public loading$ = this.loadingSubject.asObservable();\r\n    public _tableHeader: ITableHeader[] = [];\r\n\r\n    // private _allProducts: { id: number; name: string }[] = [];\r\n    private _allInputs: InputDto[] = [];\r\n    private _allProducts: ProductDto[] = [];\r\n    private _allCells: ICellDto[] = [];\r\n    private _allCompareCells: ICellCompareDto[] = [];\r\n    private _allData: IInputProductTable[] = [];\r\n    private _filterInputs: string = '';\r\n    private _mode: TableMode;\r\n\r\n    // Store the Input Row where we select Cells.\r\n    private _selectedInput: number = 0;\r\n    private _rowShow: number = 0;\r\n\r\n    private config: ITableConfig;\r\n    private displayHideCategories: number[] = [];\r\n\r\n    constructor(\r\n        mode: TableMode,\r\n        inputs: InputDto[],\r\n        products: ProductDto[],\r\n        cells: ICellDto[],\r\n        compareCells: ICellCompareDto[],\r\n        config: ITableConfig,\r\n        public tableService: TableService\r\n    ) {\r\n        super();\r\n\r\n        this._allInputs = inputs;\r\n        this._allProducts = products;\r\n        this._allCells = cells;\r\n        this._allCompareCells = compareCells;\r\n        this._mode = mode;\r\n        this.config = config;\r\n\r\n        this.tableHeader = {\r\n            stickyColumns: this.config.stickyColumns,\r\n            expandCategories: false,\r\n            expandInputs: false\r\n        };\r\n\r\n        this._rowShow = 20;\r\n    }\r\n\r\n    connect(): Observable<readonly IInputProductTable[]> {\r\n        return this.lessonsSubject.asObservable();\r\n    }\r\n\r\n    disconnect(): void {\r\n        this.lessonsSubject.complete();\r\n        this.loadingSubject.complete();\r\n    }\r\n\r\n    load(): void {\r\n        this.loadHeader();\r\n        this.loadData();\r\n    }\r\n\r\n    filter(val: string): void {\r\n        this._filterInputs = val;\r\n        this.searchData();\r\n    }\r\n\r\n    onTableScroll(e: any): void {\r\n        const tableViewHeight = e.target.offsetHeight; // viewport: ~500px\r\n        const tableScrollHeight = e.target.scrollHeight; // length of all table\r\n        const scrollLocation = e.target.scrollTop; // how far user scrolled\r\n\r\n        // If the user has scrolled within 200px of the bottom, add more data\r\n        const buffer = 300;\r\n        const limit = tableScrollHeight - tableViewHeight - buffer;\r\n        if (scrollLocation > limit) {\r\n            this._rowShow += 20;\r\n            this.searchData();\r\n        }\r\n    }\r\n\r\n    toggleCategory(id: number, type: string): void {\r\n        if (type === 'header') {\r\n            this.toggleHeader(id);\r\n        } else if (type === 'column') {\r\n            this.toggleColumn(id);\r\n        }\r\n    }\r\n\r\n    expand(type: string): void {\r\n        if (type === 'categories') {\r\n            this.expandCategories();\r\n        } else if (type === 'inputs') {\r\n            this.expandInputs();\r\n        }\r\n    }\r\n\r\n    onClickCell(inputId: number, productId: number): void {\r\n        const item = this._allData.find((x) => x.id === inputId);\r\n        if (!item) {\r\n            return;\r\n        }\r\n\r\n        if (this._mode === TableMode.ReadOnly) {\r\n            this.onClickView(item);\r\n        } else if (this._mode === TableMode.Edit) {\r\n            this.onSelectCell(item, productId);\r\n        }\r\n    }\r\n\r\n    onClickCellIcon(event: MouseEvent, type: string): void {\r\n        event.stopPropagation();\r\n        console.log('ICON:' + type);\r\n    }\r\n\r\n    onClickSelectRow(inputId: number): void {\r\n        this.onSelecteRow(inputId);\r\n    }\r\n\r\n    private displayColumns(): void {\r\n        const columns = [];\r\n        for (const item of this._tableHeader) {\r\n            if (item.hide) {\r\n                columns.push({ name: `${item.category}_empty`, text: '' });\r\n            } else {\r\n                columns.push(\r\n                    ...item.products.map((y) => {\r\n                        return { name: y.col, text: y.col };\r\n                    })\r\n                );\r\n            }\r\n        }\r\n\r\n        this.tableHeader.dynamicColumns = columns;\r\n        this.tableHeader.displayColumns = [\r\n            ...this.tableHeader.stickyColumns,\r\n            ...this.tableHeader.dynamicColumns?.map((x) => x.name)\r\n        ];\r\n\r\n        this.tableHeader.categoriesColumns = this._tableHeader;\r\n        this.tableHeader.displayCategoriesColumns = [\r\n            'header-row-first-group',\r\n            ...this._tableHeader.map((x) => x.categoryIdentifier)\r\n        ];\r\n\r\n        // Manage Expand Categories Icon\r\n        this.tableHeader.expandCategories =\r\n            this._tableHeader.filter((x) => x.hide === false).length !== this._tableHeader.length;\r\n    }\r\n\r\n    //#region Section to Load Data\r\n    private loadData(): void {\r\n        const body: IInputProductTable[] = [];\r\n\r\n        let order = 1;\r\n        let lastOrder = 1;\r\n        for (const input of this._allInputs) {\r\n            if (body.length > 0) {\r\n                const item = body.find((x) => x.category === input.categoryName);\r\n                if (item) {\r\n                    order = item.order;\r\n                } else {\r\n                    lastOrder++;\r\n                    order = lastOrder;\r\n                }\r\n            }\r\n\r\n            const item: IInputProductTable = {\r\n                id: input.id,\r\n                order: order,\r\n                category: input.categoryName,\r\n                group: input.categoryName,\r\n                input_name: {\r\n                    productId: 0,\r\n                    inputId: 0,\r\n                    inputTypeId: 0,\r\n                    text: input.name,\r\n                    className: 'table-border-right align-right',\r\n                    type: CellType.Input\r\n                },\r\n                input_category: {\r\n                    productId: 0,\r\n                    inputId: 0,\r\n                    inputTypeId: 0,\r\n                    text: input.categoryName,\r\n                    className: 'align-left',\r\n                    type: CellType.Category\r\n                }\r\n            };\r\n\r\n            let productCategoryName = this._allProducts[0].categoryName;\r\n            let previousProduct = '';\r\n\r\n            for (const product of this._allProducts) {\r\n                const field = product.name.replace(' ', '_');\r\n\r\n                item[field] = {\r\n                    productId: product.id,\r\n                    inputId: input.id,\r\n                    inputTypeId: input.typeId,\r\n                    className: 'align-center',\r\n                    type: CellType.Cell,\r\n                    select: false,\r\n                    validate: null,\r\n                    active: this._allCells.findIndex((x) => x.productId === product.id && x.inputId === input.id) !== -1\r\n                };\r\n\r\n                if (this._mode === TableMode.Validate) {\r\n                    const validateItem = this._allCompareCells.find(\r\n                        (x) => x.inputId === input.id && x.productId === product.id\r\n                    );\r\n                    if (validateItem) {\r\n                        (item[field] as ICellDefinition).validate =\r\n                            validateItem.sourceModelParamId === validateItem.targetModelParamId;\r\n                    }\r\n                }\r\n\r\n                if (productCategoryName !== product.categoryName) {\r\n                    (item[previousProduct] as ICellDefinition).className = 'align-center table-border-right';\r\n                    productCategoryName = product.categoryName;\r\n                }\r\n\r\n                previousProduct = product.name;\r\n            }\r\n\r\n            // Generate Empty Column Product\r\n            for (const header of this._tableHeader) {\r\n                item[`${header.category}_empty`] = {\r\n                    productId: 0,\r\n                    inputId: 0,\r\n                    className: 'table-border-right',\r\n                    inputTypeId: 0,\r\n                    type: CellType.EmptyCell\r\n                };\r\n            }\r\n\r\n            body.push(item);\r\n        }\r\n\r\n        body[body.length - 1].className = 'table-border-right';\r\n\r\n        // Sort Elements\r\n        this.sort(body);\r\n        this._allData = body.map((x) => Object.assign({}, x));\r\n        this.nextRows(body);\r\n    }\r\n\r\n    private loadHeader(): void {\r\n        for (const header of this._allProducts) {\r\n            let item = this._tableHeader.find((y) => y.category === header.categoryName);\r\n            if (!item) {\r\n                const d: ITableHeader = {\r\n                    id: header.id,\r\n                    hide: false,\r\n                    category: header.categoryName,\r\n                    categoryIdentifier: header.categoryName.replace(' ', '_'),\r\n                    colspan: 1,\r\n                    products: []\r\n                };\r\n                item = d;\r\n                this._tableHeader.push(d);\r\n            }\r\n\r\n            const p: ProductHeader = {\r\n                id: header.id,\r\n                name: header.name,\r\n                col: header.name.replace(' ', '_')\r\n            };\r\n            item.products.push(p);\r\n\r\n            item.colspan = item?.products.length;\r\n        }\r\n\r\n        this.displayColumns();\r\n    }\r\n    //#endregion\r\n\r\n    //#region Manage Lazy Row Loading\r\n    private nextRows(data: IInputProductTable[]): void {\r\n        const rows = data.slice(0, this._rowShow);\r\n        this.removeCategoriesName(rows);\r\n\r\n        this.lessonsSubject.next(rows);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Seccion to Show/hide Columns/Rows and filter\r\n    private toggleHeader(id: number): void {\r\n        const category = this._tableHeader.find((x) => x.id === id);\r\n        if (!category) {\r\n            return;\r\n        }\r\n        category.colspan = category.hide ? category.products.length : 1;\r\n        category.hide = !category.hide;\r\n        this.displayColumns();\r\n    }\r\n\r\n    private toggleColumn(id: number): void {\r\n        const index = this.displayHideCategories.indexOf(id);\r\n        if (index === -1) {\r\n            this.displayHideCategories.push(id);\r\n        } else {\r\n            this.displayHideCategories.splice(index, 1);\r\n        }\r\n\r\n        this.searchData();\r\n    }\r\n\r\n    private searchData(): void {\r\n        var alldata = this._allData.map((x) => Object.assign({}, x));\r\n\r\n        alldata = alldata.filter((x) => x['input_name'].text?.toLowerCase().includes(this._filterInputs.toLowerCase()));\r\n        if (this.displayHideCategories.length === 0) {\r\n            this.lessonsSubject.next(alldata);\r\n        }\r\n\r\n        const categories = alldata.filter((x) => this.displayHideCategories.includes(x.id));\r\n        if (categories.length === 0) {\r\n            this.lessonsSubject.next(alldata);\r\n        }\r\n\r\n        const filterByCategory = (arr1: IInputProductTable[], arr2: IInputProductTable[]) => {\r\n            let res = [];\r\n            res = arr1.filter((el) => {\r\n                return !arr2.find((element) => {\r\n                    return element.category === el.category;\r\n                });\r\n            });\r\n            return res;\r\n        };\r\n        alldata = filterByCategory(alldata, categories);\r\n\r\n        for (const row of categories) {\r\n            const emptyItem = this.generateEmptyRow(row);\r\n            alldata.push(emptyItem);\r\n        }\r\n\r\n        this.sort(alldata);\r\n\r\n        this.removeCategoriesName(alldata);\r\n        this.tableHeader.expandInputs = this.displayHideCategories.length > 0;\r\n        // this.lessonsSubject.next(alldata);\r\n\r\n        this.nextRows(alldata);\r\n    }\r\n\r\n    private removeCategoriesName(data: IInputProductTable[]): void {\r\n        // Remove Category Name\r\n        const categories: string[] = [];\r\n        for (const item of data) {\r\n            if (categories.indexOf(item.category) === -1) {\r\n                item.input_category.text = item.category;\r\n                categories.push(item.category);\r\n            } else {\r\n                item.input_category.text = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    private generateEmptyRow(row: IInputProductTable): IInputProductTable {\r\n        const tmp: IInputProductTable = {\r\n            id: row.id,\r\n            order: row.order,\r\n            category: row.category,\r\n            group: row.group,\r\n            input_name: {\r\n                productId: 0,\r\n                inputId: 0,\r\n                text: '',\r\n                className: 'table-border-right',\r\n                inputTypeId: 0,\r\n                type: CellType.EmptyCell\r\n            },\r\n            input_category: row.input_category\r\n        };\r\n\r\n        for (let key in row) {\r\n            if (!tmp.hasOwnProperty(key)) {\r\n                tmp[key] = {\r\n                    productId: 0,\r\n                    inputId: 0,\r\n                    text: '',\r\n                    className: (row[key] as ICellDefinition).className,\r\n                    inputTypeId: (row[key] as ICellDefinition).inputTypeId,\r\n                    type: CellType.EmptyCell\r\n                };\r\n            }\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    private sort(collection: IInputProductTable[] | null = null): void {\r\n        if (!collection) {\r\n            collection = this._allData;\r\n        }\r\n\r\n        collection.sort((a, b) => {\r\n            const inputName1: string = a.input_name.text as string;\r\n            const inputName2: string = b.input_name.text as string;\r\n\r\n            return a.category.localeCompare(b.category) || inputName1.localeCompare(inputName2);\r\n        });\r\n    }\r\n    //#endregion\r\n\r\n    //#region Expand/Collapse Categories and Inputs\r\n    /**\r\n     * Expand/Collapse All Liability Categories\r\n     */\r\n    private expandCategories(): void {\r\n        const item = this._tableHeader.find((x) => x.hide === true);\r\n\r\n        if (item) {\r\n            // Hide All Liability Categories\r\n            this._tableHeader.map((x) => {\r\n                x.hide = false;\r\n                x.colspan = x.products.length;\r\n            });\r\n        } else {\r\n            // Show All Liability Categories\r\n            this._tableHeader.map((x) => {\r\n                x.hide = true;\r\n                x.colspan = 1;\r\n            });\r\n        }\r\n\r\n        this.displayColumns();\r\n    }\r\n\r\n    /**\r\n     * Expand/Collapse All Inputs Categories\r\n     */\r\n    private expandInputs(): void {\r\n        if (this.displayHideCategories.length === 0) {\r\n            var alldata = this._allData.map((x) => Object.assign({}, x));\r\n            this.removeCategoriesName(alldata);\r\n            const ids = alldata.filter((x) => x.input_category.text !== '').map((x) => x.id);\r\n            this.displayHideCategories = ids;\r\n        } else {\r\n            this.displayHideCategories = [];\r\n        }\r\n\r\n        this.searchData();\r\n    }\r\n    //#endregion\r\n\r\n    //#region Cell Actions\r\n    private onClickView(item: IInputProductTable): void {\r\n        console.log('Click View');\r\n    }\r\n\r\n    /**\r\n     * Modify Value of Cell Selected property\r\n     */\r\n    private onSelectCell(item: IInputProductTable, productId: number): void {\r\n        const product = this._allProducts.find((x) => x.id === productId);\r\n        if (!product) {\r\n            return;\r\n        }\r\n\r\n        // UnSelect Cells\r\n        this.onUnselectCells(item.id);\r\n\r\n        // Change the Cell Select Value for a specific Product\r\n        const newValue = !(item[product.name] as ICellDefinition).select;\r\n        (item[product.name] as ICellDefinition).select = newValue;\r\n\r\n        // Check if all cells in the row are selected to change the Input Cell Value\r\n        let isAllCellSelected = true;\r\n        for (const product of this._allProducts) {\r\n            if (!(item[product.name] as ICellDefinition).select) {\r\n                isAllCellSelected = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        item.input_name.select = isAllCellSelected;\r\n\r\n        this._selectedInput = item.id;\r\n    }\r\n\r\n    private onSelecteRow(inputId: number): void {\r\n        if (this._mode !== TableMode.Edit) {\r\n            return;\r\n        }\r\n\r\n        const item = this._allData.find((x) => x.id === inputId);\r\n        if (!item) {\r\n            return;\r\n        }\r\n\r\n        // UnSelect Cells\r\n        this.onUnselectCells(inputId);\r\n\r\n        const newValue = item.input_name.select ? false : true;\r\n        item.input_name.select = newValue;\r\n        for (const product of this._allProducts) {\r\n            (item[product.name] as ICellDefinition).select = newValue;\r\n        }\r\n\r\n        this._selectedInput = item.id;\r\n    }\r\n\r\n    private onClickEdit(): void {}\r\n\r\n    private onClickInsert(): void {}\r\n\r\n    /**\r\n     * Un-select all cells when you click a cell from a different Input\r\n     */\r\n    private onUnselectCells(newInputId: number): void {\r\n        // Compare the previous input row selected with the new input row\r\n        if (this._selectedInput === newInputId) {\r\n            return;\r\n        }\r\n\r\n        const row = this._allData.find((x) => x.id === this._selectedInput);\r\n        if (!row) {\r\n            return;\r\n        }\r\n\r\n        for (const product of this._allProducts) {\r\n            (row[product.name] as ICellDefinition).select = false;\r\n        }\r\n\r\n        row.input_name.select = false;\r\n    }\r\n    //#endregion\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "mode",
                        "type": "TableMode",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "inputs",
                        "type": "InputDto[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "products",
                        "type": "ProductDto[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cells",
                        "type": "ICellDto[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "compareCells",
                        "type": "ICellCompareDto[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "ITableConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "tableService",
                        "type": "TableService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "mode",
                        "type": "TableMode",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "inputs",
                        "type": "InputDto[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "products",
                        "type": "ProductDto[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cells",
                        "type": "ICellDto[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "compareCells",
                        "type": "ICellCompareDto[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "ITableConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tableService",
                        "type": "TableService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_allCells",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICellDto[]",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_allCompareCells",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICellCompareDto[]",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_allData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IInputProductTable[]",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_allInputs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputDto[]",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_allProducts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductDto[]",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_filterInputs",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableMode",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_rowShow",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_selectedInput",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_tableHeader",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITableHeader[]",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITableConfig",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "displayHideCategories",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "lessonsSubject",
                    "defaultValue": "new BehaviorSubject<IInputProductTable[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.loadingSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "loadingSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "tableHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "tableService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableService",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<IInputProductTable[]>",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "displayColumns",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "expand",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "expandCategories",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 433,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExpand/Collapse All Liability Categories\n",
                    "description": "<p>Expand/Collapse All Liability Categories</p>\n",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "expandInputs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 456,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nExpand/Collapse All Inputs Categories\n",
                    "description": "<p>Expand/Collapse All Inputs Categories</p>\n",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "val",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateEmptyRow",
                    "args": [
                        {
                            "name": "row",
                            "type": "IInputProductTable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IInputProductTable",
                    "typeParameters": [],
                    "line": 383,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "IInputProductTable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "load",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "loadHeader",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 271,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "nextRows",
                    "args": [
                        {
                            "name": "data",
                            "type": "IInputProductTable[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 302,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IInputProductTable[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickCell",
                    "args": [
                        {
                            "name": "inputId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "productId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "inputId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "productId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickCellIcon",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 527,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "onClickInsert",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 529,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "onClickSelectRow",
                    "args": [
                        {
                            "name": "inputId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "inputId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickView",
                    "args": [
                        {
                            "name": "item",
                            "type": "IInputProductTable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 471,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "IInputProductTable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectCell",
                    "args": [
                        {
                            "name": "item",
                            "type": "IInputProductTable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "productId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 478,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nModify Value of Cell Selected property\n",
                    "description": "<p>Modify Value of Cell Selected property</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "IInputProductTable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "productId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelecteRow",
                    "args": [
                        {
                            "name": "inputId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 505,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "inputId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTableScroll",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onUnselectCells",
                    "args": [
                        {
                            "name": "newInputId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 534,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUn-select all cells when you click a cell from a different Input\n",
                    "description": "<p>Un-select all cells when you click a cell from a different Input</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "newInputId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeCategoriesName",
                    "args": [
                        {
                            "name": "data",
                            "type": "IInputProductTable[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 370,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IInputProductTable[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 332,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "sort",
                    "args": [
                        {
                            "name": "collection",
                            "type": "IInputProductTable[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 415,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "collection",
                            "type": "IInputProductTable[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleCategory",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleColumn",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 321,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleHeader",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 311,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ProductDto",
            "id": "class-ProductDto-f6064fcb7de475f6f73749725fe98e27",
            "file": "src/app/feature/table/entitites/product.dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ProductDto {\r\n    id: number;\r\n    name: string;\r\n    categoryName: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "categoryName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "TooltipIfTruncatedDirective",
            "id": "directive-TooltipIfTruncatedDirective-66dd3135ed4c287bf2a02c52900f8976",
            "file": "src/app/feature/table/directives/tooltip-if-truncated.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, OnInit } from '@angular/core';\r\nimport { MatTooltip } from '@angular/material/tooltip';\r\n\r\n@Directive({\r\n    selector: '[matTooltip][appTooltipIfTruncated]'\r\n})\r\nexport class TooltipIfTruncatedDirective implements OnInit {\r\n    constructor(private matTooltip: MatTooltip, private elementRef: ElementRef<HTMLElement>) {}\r\n\r\n    public ngOnInit(): void {\r\n        // Wait for DOM update\r\n        setTimeout(() => {\r\n            console.log('tooltip dir', this.elementRef.nativeElement);\r\n            const element = this.elementRef.nativeElement;\r\n            console.log(\r\n                'tooltip dir. scroll: ',\r\n                element.scrollWidth,\r\n                '\\t client: ',\r\n                element.clientWidth,\r\n                'result: ',\r\n                element.scrollWidth <= element.clientWidth\r\n            );\r\n            this.matTooltip.disabled = element.scrollWidth <= element.clientWidth;\r\n        });\r\n    }\r\n}\r\n",
            "selector": "[matTooltip][appTooltipIfTruncated]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "matTooltip",
                        "type": "MatTooltip",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "matTooltip",
                        "type": "MatTooltip",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f7ffeca624ecc43c5dc735d7e171b9de",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sidenav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSidenav"
                        }
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "'ArcsimPlatformUI'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { delay } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    title = 'ArcsimPlatformUI';\n\n    @ViewChild(MatSidenav) sidenav!: MatSidenav;\n\n    // constructor(private observer: BreakpointObserver) {}\n    constructor() {}\n\n    ngAfterViewInit() {\n        // this.observer\n        //     .observe(['(max-width: 800px)'])\n        //     .pipe(delay(1))\n        //     .subscribe((res) => {\n        //         if (res.matches) {\n        //             this.sidenav.mode = 'over';\n        //             this.sidenav.close();\n        //         } else {\n        //             this.sidenav.mode = 'side';\n        //             this.sidenav.open();\n        //         }\n        //     });\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-toolbar {\r\n    // background: #004a9f;\r\n    // color: white;\r\n}\r\n\r\nmat-sidenav {\r\n    margin: 16px;\r\n    width: 200px;\r\n    border-right: none;\r\n    // background: #002b5c;\r\n    // color: white;\r\n    border-radius: 10px;\r\n    padding: 16px;\r\n    text-align: center;\r\n}\r\n\r\n.content {\r\n    height: calc(100vh - 98px);\r\n    border-radius: 10px;\r\n    margin: 16px;\r\n    margin-left: 32px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    font-size: 2rem;\r\n    // color: lightgray;\r\n}\r\n\r\nmat-sidenav-container {\r\n    height: calc(100vh - 65px);\r\n}\r\n\r\n.menu-button {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    font-size: 1rem;\r\n\r\n    mat-icon {\r\n        margin-right: 8px;\r\n    }\r\n}\r\n\r\n.avatar {\r\n    margin-top: 16px;\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n}\r\n\r\n.name {\r\n    margin-top: 8px;\r\n    font-weight: normal;\r\n}\r\n\r\n.designation {\r\n    margin-top: 2px;\r\n    font-size: 0.7rem;\r\n    // color: lightgrey;\r\n}\r\n\r\nmat-divider {\r\n    margin-top: 16px;\r\n    margin-bottom: 16px;\r\n    // background-color: rgba(255, 255, 255, 0.5);\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "templateData": "<!-- src\\app\\app.component.html -->\n\n<!-- <app-sidenav>\n  <div class=\"container\">\n    <h1 class=\"mat-display-3\">Main Content</h1>\n    <p>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis nobis illum animi temporibus omnis.\n      Consequatur qui fugit facilis reiciendis deserunt, debitis beatae! Illo dolorem asperiores nisi excepturi eum\n      veritatis cupiditate.\n    </p>\n  </div>\n</app-sidenav> -->\n\n<!-- <router-outlet></router-outlet> -->\n\n<!-- \n<mat-toolbar class=\"mat-elevation-z8\">\n  <button mat-icon-button *ngIf=\"sidenav.mode === 'over'\" (click)=\"sidenav.toggle()\">\n      <mat-icon *ngIf=\"!sidenav.opened\">\n          menu\n      </mat-icon>\n      <mat-icon *ngIf=\"sidenav.opened\">\n          close\n      </mat-icon>\n  </button>\n  Responsive side navigation\n</mat-toolbar>\n\n<mat-sidenav-container>\n  <mat-sidenav #sidenav=\"matSidenav\" class=\"mat-elevation-z8\">\n\n      <img class=\"avatar mat-elevation-z8\" src=\"https://source.unsplash.com/c_GmwfHBDzk/200x200\" />\n\n      <h4 class=\"name\">John Smith</h4>\n      <p class=\"designation\">Software Engineer</p>\n\n      <mat-divider></mat-divider>\n\n      <button mat-button class=\"menu-button primary\">\n          <mat-icon>home</mat-icon>\n          <span>Home</span>\n      </button>\n      <button mat-button class=\"menu-button\">\n          <mat-icon>person</mat-icon>\n          <span>Profile</span>\n      </button>\n      <button mat-button class=\"menu-button\">\n          <mat-icon>info</mat-icon>\n          <span>About</span>\n      </button>\n\n      <mat-divider></mat-divider>\n\n      <button mat-button class=\"menu-button\">\n          <mat-icon>help</mat-icon>\n          <span>Help</span>\n      </button>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Choose a date</mat-label>\n        <input matInput [matDatepicker]=\"picker\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n\n  </mat-sidenav>\n  <mat-sidenav-content>\n      <div class=\"content mat-elevation-z8\">\n          Main content here!\n      </div>\n  </mat-sidenav-content>\n</mat-sidenav-container> -->\n<h1>\n    {{ title }}\n</h1>\n\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 317,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "EjemploComponent",
            "id": "component-EjemploComponent-2ef526366db7b412d624ba229f66cbf1",
            "file": "src/app/feature/ejemplo/ejemplo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ejemplo-example",
            "styleUrls": [
                "./ejemplo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ejemplo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ejemplo-example',\r\n    templateUrl: './ejemplo.component.html',\r\n    styleUrls: ['./ejemplo.component.scss']\r\n})\r\nexport class EjemploComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ejemplo.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "TEST asd <table-example></table-example>\r\n"
        },
        {
            "name": "ErrorComponent",
            "id": "component-ErrorComponent-e9f2eb3d529873d0e66f768565450a33",
            "file": "src/app/feature/error/error.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./error.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    templateUrl:'./error.component.html'\r\n})\r\nexport class ErrorComponent {\r\n    constructor() {}\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "templateData": "<div class=\"middle-box text-center\">\r\n    <div class=\"jumbotron\">\r\n        <h2>Sorry...</h2>\r\n        <br />\r\n        <h5>\r\n            There seems to be an issue with the configuaration.\r\n            <br /><br />\r\n            Try refreshing the page.\r\n            <br /><br />\r\n            Contact the support if the problem persists.\r\n        </h5>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-0ade1fb04ea51afa402386b26c0b60d0",
            "file": "src/app/feature/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-404",
            "styleUrls": [
                "./page-not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector:'app-404',\r\n    templateUrl:'./page-not-found.component.html',\r\n    styleUrls:['./page-not-found.component.scss']\r\n})\r\nexport class PageNotFoundComponent{\r\n    constructor() {}\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body {\r\n    background-color: #f3f3f4;\r\n    height: 100%;\r\n    font-size: 13px;\r\n    color: #676a6c;\r\n    overflow-x: hidden;\r\n    margin: 0;\r\n}\r\n\r\n.main-panel {\r\n    display: flex;\r\n    justify-content: stretch;\r\n\r\n    input {\r\n        min-width: 80%;\r\n    }\r\n\r\n    button {\r\n        min-width: 20%;\r\n    }\r\n}\r\n",
                    "styleUrl": "./page-not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-with, initial-scale=1.0\" />\r\n    </head>\r\n\r\n    <div class=\"gray-bg\">\r\n        <div class=\"middle-box text-center\">\r\n            <h1>404</h1>\r\n            <h2 class=\"font-bold\">\r\n                <span>Page Not Found</span>\r\n            </h2>\r\n\r\n            <div class=\"error-desc\">\r\n                <p>\r\n                    Sorry, but the page you are looking for has not been found. Try\r\n                    checking the URL for on your browser or try found something else in\r\n                    your app.\r\n                </p>\r\n                <form class=\"main-panel\" role=\"form\">\r\n                    <input matInput\r\n                    id=\"pageNotFound-search-input\"\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Search for page\"/>\r\n\r\n                    <button mat-raised-button id=\"pageNotFound-search-button\" color=\"primary\" type=\"submit\">\r\n                        <span>Search</span>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</html>\r\n"
        },
        {
            "name": "TableBasicComponent",
            "id": "component-TableBasicComponent-8e4e3af778923965ed6bd859c4760317",
            "file": "src/app/feature/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "table-example",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "TableMode"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cellType",
                    "defaultValue": "CellType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductDataSource",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "modes",
                    "defaultValue": "TableMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "searchValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "filter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDynamicWidth",
                    "args": [
                        {
                            "name": "column",
                            "type": "ITableHeader",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "ITableHeader",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHeaderClassName",
                    "args": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRowClassName",
                    "args": [
                        {
                            "name": "row",
                            "type": "IInputProductTable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "IInputProductTable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isSticky",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { IInputProductTable, CellType, TableMode } from './interfaces/table-data.interface';\r\nimport { ITableHeader } from './interfaces/table-header.interface';\r\nimport { ITableConfig } from './interfaces/table.config';\r\nimport { ProductDataSource } from './table.datasource';\r\nimport { TableService } from './services/table.service';\r\nimport { DemoTableService } from './services/demo-table.service';\r\n\r\n@Component({\r\n    selector: 'table-example',\r\n    templateUrl: './table.component.html',\r\n    styleUrls: ['./table.component.scss']\r\n})\r\nexport class TableBasicComponent implements OnInit {\r\n    modes = TableMode;\r\n    @Input() mode: TableMode;\r\n\r\n    dataSource: ProductDataSource;\r\n    searchValue: string;\r\n    cellType = CellType;\r\n\r\n    constructor(private demoTableService: DemoTableService, private tableService: TableService) {\r\n        const tableConfig: ITableConfig = {\r\n            stickyColumns: ['input_category', 'input_name']\r\n        };\r\n        this.mode = this.modes.Edit;\r\n\r\n        const inputs = this.demoTableService.getInput();\r\n        const products = this.demoTableService.getProduct();\r\n        const cells = this.demoTableService.getCell();\r\n        const cellsCompare = this.demoTableService.getCellCompare();\r\n\r\n        this.dataSource = new ProductDataSource(\r\n            this.mode,\r\n            inputs,\r\n            products,\r\n            cells,\r\n            cellsCompare,\r\n            tableConfig,\r\n            this.tableService\r\n        );\r\n        this.dataSource.load();\r\n    }\r\n\r\n    ngOnInit(): void {}\r\n\r\n    isSticky(): boolean {\r\n        return true;\r\n    }\r\n\r\n    filter(): void {\r\n        this.dataSource.filter(this.searchValue);\r\n    }\r\n\r\n    getRowClassName(row: IInputProductTable): string {\r\n        if (row.input_category.text !== '') {\r\n            return 'border-split-category-section';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    getDynamicWidth(column: ITableHeader): any {\r\n        const witdh: number = 100 * column.colspan;\r\n\r\n        return witdh + 'px';\r\n    }\r\n\r\n    getHeaderClassName(column: string): string {\r\n        if (column.includes('_empty')) {\r\n            return 'table-border-right';\r\n        }\r\n\r\n        const header = this.dataSource._tableHeader.find((x) => x.products.findIndex((y) => y.name === column));\r\n        if (!header) {\r\n            return '';\r\n        }\r\n        const index = header.products.findIndex((x) => x.name === column);\r\n        if (index === -1) {\r\n            return '';\r\n        }\r\n\r\n        if (header.products.length === index + 1) {\r\n            return 'table-border-right';\r\n        }\r\n\r\n        return '';\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$font-size-10: 10px;\r\n$font-size-14: 14px;\r\n$font-color: black;\r\n$product-cell-width: 100px;\r\n$input-cell-width: 100px;\r\n$border-style: 2px solid black;\r\n$border-basic-style: 1px solid #808080;\r\n$cell-backgroud-color: #ffb74d;\r\n$icon-active: #5d5d5d;\r\n$icon-active-hover: #3f51b5;\r\n$icon-in-active: grey;\r\n$validate-active-background-color: green;\r\n$validate-in-active-background-color: red;\r\n\r\n.example-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-height: 500px;\r\n    min-width: 300px;\r\n}\r\n\r\n.mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n}\r\n\r\n.container {\r\n    width: 100%;\r\n    overflow: auto;\r\n}\r\ntable {\r\n    display: block; // display should be block, inline-block, grid or flex to do work the scroll event\r\n    .header-product {\r\n        font-size: $font-size-14;\r\n        padding-right: $border-basic-style;\r\n        cursor: pointer;\r\n\r\n        span {\r\n            color: $font-color;\r\n            font-weight: bold;\r\n            padding-left: 15px;\r\n            display: flex;\r\n            align-items: center;\r\n            mat-icon {\r\n                font-size: 1em;\r\n            }\r\n        }\r\n    }\r\n\r\n    mat-icon {\r\n        font-size: 20px;\r\n        margin-top: 5px;\r\n        color: $icon-active;\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: $icon-active-hover;\r\n        }\r\n        &.in-active {\r\n            color: $icon-in-active;\r\n            cursor: default;\r\n            &:hover {\r\n                color: $icon-in-active;\r\n            }\r\n        }\r\n    }\r\n\r\n    .search-section {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        .expand-icon-section {\r\n            position: absolute;\r\n            top: -5px;\r\n            cursor: pointer;\r\n            &.expand-icon-category {\r\n                right: 0px;\r\n            }\r\n            &.expand-icon-inputs {\r\n                left: 0px;\r\n            }\r\n\r\n            .mat-icon.expand-icon {\r\n                transition: 200ms ease-in-out;\r\n                transform: rotate(180deg);\r\n                cursor: pointer;\r\n                z-index: 9;\r\n\r\n                &.rotated {\r\n                    transform: rotate(0deg);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    th.mat-header-cell,\r\n    td.mat-cell,\r\n    td.mat-footer-cell {\r\n        .mat-icon {\r\n            padding: 2px;\r\n        }\r\n        &:first-of-type {\r\n            padding-left: 0px;\r\n        }\r\n        &:not(:last-child) {\r\n            border-right: $border-basic-style;\r\n        }\r\n    }\r\n    .headers {\r\n        th {\r\n            &.mat-header-cell {\r\n                font-size: $font-size-10;\r\n                font-weight: bold;\r\n                color: $font-color;\r\n\r\n                &:not(:last-child) {\r\n                    border-right: $border-basic-style;\r\n                }\r\n            }\r\n        }\r\n        .mat-table-sticky {\r\n            top: 56px !important;\r\n            border-bottom: $border-style;\r\n        }\r\n    }\r\n\r\n    tr.mat-row,\r\n    th.mat-header-cell {\r\n        height: 30px;\r\n    }\r\n\r\n    .border-split-category-section {\r\n        td.mat-cell {\r\n            border-top: $border-style !important;\r\n        }\r\n        th {\r\n            border-right: $border-style;\r\n            border-bottom: 0px;\r\n            &:first-child {\r\n                border-bottom: $border-style;\r\n            }\r\n\r\n            &:last-child {\r\n                border-right: 0px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .mat-cell {\r\n        font-size: $font-size-10;\r\n        span {\r\n            font-size: $font-size-10;\r\n            font-weight: bold;\r\n            color: $font-color;\r\n            width: 300px;\r\n        }\r\n\r\n        &:nth-child(2) {\r\n            border-right: $border-style !important;\r\n        }\r\n        &.mat-column-input_category {\r\n            border-right: 0px !important;\r\n            border-bottom: 0px !important;\r\n        }\r\n        &.input-sticky {\r\n            left: 100px !important;\r\n        }\r\n    }\r\n\r\n    .cell-selected {\r\n        background-color: $cell-backgroud-color;\r\n    }\r\n\r\n    .validate-active {\r\n        background-color: $validate-active-background-color;\r\n        .mat-icon {\r\n            color: #fff !important;\r\n        }\r\n    }\r\n\r\n    .validate-in-active {\r\n        background-color: $validate-in-active-background-color;\r\n        .mat-icon {\r\n            color: #fff !important;\r\n        }\r\n    }\r\n\r\n    .table-border-right {\r\n        border-right: $border-style !important;\r\n    }\r\n\r\n    .search-text-field {\r\n        width: 170px;\r\n        z-index: 1;\r\n        position: absolute;\r\n        bottom: -10px;\r\n        left: 15px;\r\n        a {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    span {\r\n        display: inline-block;\r\n        width: 90px !important;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        padding: 5px 5px 0px 5px;\r\n    }\r\n\r\n    .w-90 {\r\n        width: 90px !important;\r\n    }\r\n    .w-100 {\r\n        width: 100px;\r\n    }\r\n\r\n    .w-200 {\r\n        width: 200px;\r\n    }\r\n\r\n    .w-90pc {\r\n        width: 90% !important;\r\n    }\r\n\r\n    .fs-14 {\r\n        font-size: $font-size-14 !important;\r\n    }\r\n\r\n    .align-right {\r\n        text-align: right;\r\n    }\r\n\r\n    .align-left {\r\n        text-align: left;\r\n    }\r\n\r\n    .align-center {\r\n        text-align: center;\r\n    }\r\n\r\n    .pointer {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .cursor-default {\r\n        cursor: default !important;\r\n    }\r\n}\r\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "demoTableService",
                        "type": "DemoTableService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "tableService",
                        "type": "TableService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "demoTableService",
                        "type": "DemoTableService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tableService",
                        "type": "TableService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "EJEMLLL\r\n\r\n<div class=\"container example-container\" style=\"width: 100%; height: 575px\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" (scroll)=\"dataSource.onTableScroll($event)\">\r\n        <!-- Header row first category group Search-->\r\n        <ng-container matColumnDef=\"header-row-first-group\">\r\n            <th\r\n                mat-header-cell\r\n                *matHeaderCellDef\r\n                [attr.position]=\"'relative'\"\r\n                [attr.colspan]=\"2\"\r\n                [attr.rowSpan]=\"2\"\r\n                [ngClass]=\"'w-200'\"\r\n            >\r\n                <div class=\"search-section\">\r\n                    <div class=\"expand-icon-section expand-icon-category\">\r\n                        <mat-icon\r\n                            class=\"expand-icon\"\r\n                            [ngClass]=\"{ rotated: this.dataSource.tableHeader.expandCategories }\"\r\n                            (click)=\"this.dataSource.expand('categories')\"\r\n                            >arrow_forward</mat-icon\r\n                        >\r\n                    </div>\r\n\r\n                    <div class=\"expand-icon-section expand-icon-inputs\">\r\n                        <mat-icon\r\n                            class=\"expand-icon\"\r\n                            [ngClass]=\"{ rotated: this.dataSource.tableHeader.expandInputs }\"\r\n                            (click)=\"this.dataSource.expand('inputs')\"\r\n                            >arrow_downward</mat-icon\r\n                        >\r\n                    </div>\r\n                    <mat-form-field class=\"search-text-field\" appearance=\"standard\">\r\n                        <mat-label>Search Inputs ...</mat-label>\r\n                        <input matInput type=\"text\" [(ngModel)]=\"searchValue\" />\r\n                        <div matSuffix style=\"display: flex\">\r\n                            <a matSuffix aria-label=\"Clear\" (click)=\"filter()\">\r\n                                <mat-icon>search</mat-icon>\r\n                            </a>\r\n                            <a\r\n                                *ngIf=\"searchValue\"\r\n                                matSuffix\r\n                                mat-icon-button\r\n                                aria-label=\"Clear\"\r\n                                (click)=\"searchValue = ''; filter()\"\r\n                            >\r\n                                <mat-icon>close</mat-icon>\r\n                            </a>\r\n                        </div>\r\n                    </mat-form-field>\r\n                </div>\r\n            </th>\r\n        </ng-container>\r\n\r\n        <!-- Category group headers -->\r\n        <ng-container\r\n            *ngFor=\"let column of dataSource.tableHeader.categoriesColumns\"\r\n            matColumnDef=\"{{ column.categoryIdentifier }}\"\r\n            [sticky]=\"isSticky()\"\r\n        >\r\n            <th\r\n                mat-header-cell\r\n                *matHeaderCellDef\r\n                [ngClass]=\"'header-product'\"\r\n                [style.witdh]=\"getDynamicWidth(column)\"\r\n                [attr.colspan]=\"column.colspan\"\r\n                (click)=\"dataSource.toggleCategory(column.id, 'header')\"\r\n            >\r\n                <span [ngClass]=\"'w-90pc pointer'\">\r\n                    {{ column.category }}<mat-icon *ngIf=\"column.hide === true\">chevron_right</mat-icon\r\n                    ><mat-icon *ngIf=\"column.hide === false\">chevron_left </mat-icon>\r\n                </span>\r\n            </th>\r\n        </ng-container>\r\n\r\n        <!-- Sticky Column Category/input-->\r\n        <ng-container *ngFor=\"let column of dataSource.tableHeader.stickyColumns\">\r\n            <ng-container [matColumnDef]=\"column\" [sticky]=\"isSticky()\">\r\n                <th mat-header-cell *matHeaderCellDef [ngClass]=\"'w-100'\" style=\"display: none\">\r\n                    <span>{{ column }}</span>\r\n                </th>\r\n\r\n                <td\r\n                    mat-cell\r\n                    *matCellDef=\"let row\"\r\n                    [ngClass]=\"getRowClassName(row)\"\r\n                    [ngClass]=\"row[column].className\"\r\n                    [ngClass]=\"{\r\n                        pointer: mode === modes.Edit,\r\n                        'cell-selected': row[column].select,\r\n                        'input-sticky': column === 'input_name'\r\n                    }\"\r\n                    (click)=\"dataSource.onClickSelectRow(row.id)\"\r\n                >\r\n                    <ng-container [ngSwitch]=\"row[column].type\">\r\n                        <span\r\n                            *ngSwitchCase=\"cellType.Category\"\r\n                            class=\"fs-14\"\r\n                            (click)=\"dataSource.toggleCategory(row['id'], 'column')\"\r\n                            [matTooltip]=\"row[column].text\"\r\n                            appTooltipIfTruncated\r\n                        >\r\n                            {{ row[column].text }}\r\n                        </span>\r\n                        <span [matTooltip]=\"row[column].text\" appTooltipIfTruncated *ngSwitchCase=\"cellType.Input\">{{\r\n                            row[column].text\r\n                        }}</span>\r\n                    </ng-container>\r\n                </td>\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n        <ng-container *ngFor=\"let column of dataSource.tableHeader.dynamicColumns\">\r\n            <ng-container [matColumnDef]=\"column.name\">\r\n                <th mat-header-cell *matHeaderCellDef [ngClass]=\"'w-100'\" [ngClass]=\"getHeaderClassName(column.name)\">\r\n                    <span class=\"align-center\">{{ column.text }}</span>\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let row\" [ngClass]=\"row[column.name].className\">\r\n                    <ng-container [ngSwitch]=\"row[column.name].type\">\r\n                        <!-- Empty Cell -->\r\n                        <span *ngSwitchCase=\"cellType.EmptyCell\"></span>\r\n\r\n                        <!-- Cell -->\r\n                        <ng-container *ngSwitchCase=\"cellType.Cell\" [ngSwitch]=\"mode\">\r\n                            <!-- {{ row[column.name] | json }} -->\r\n                            <div\r\n                                *ngSwitchCase=\"modes.ReadOnly\"\r\n                                class=\"cell-container\"\r\n                                (click)=\"dataSource.onClickCell(row[column.name].inputId, row[column.name].productId)\"\r\n                            >\r\n                                <mat-icon [ngClass]=\"{ 'in-active': !row[column.name].active }\"\r\n                                    >remove_red_eye</mat-icon\r\n                                >\r\n                            </div>\r\n                            <div\r\n                                *ngSwitchCase=\"modes.Edit\"\r\n                                class=\"cell-container pointer\"\r\n                                [ngClass]=\"{ 'cell-selected': row[column.name].select }\"\r\n                                (click)=\"dataSource.onClickCell(row[column.name].inputId, row[column.name].productId)\"\r\n                            >\r\n                                <mat-icon\r\n                                    *ngIf=\"row[column.name].inputTypeId === 1\"\r\n                                    (click)=\"dataSource.onClickCellIcon($event, 'insert')\"\r\n                                    >insert_link</mat-icon\r\n                                >\r\n                                <mat-icon\r\n                                    *ngIf=\"row[column.name].inputTypeId === 2\"\r\n                                    (click)=\"dataSource.onClickCellIcon($event, 'edit')\"\r\n                                    >edit</mat-icon\r\n                                >\r\n                            </div>\r\n                            <div\r\n                                *ngSwitchCase=\"modes.Validate\"\r\n                                class=\"cell-container\"\r\n                                [ngClass]=\"{\r\n                                    'validate-active':\r\n                                        row[column.name].validate !== null && row[column.name].validate === true,\r\n                                    'validate-in-active':\r\n                                        row[column.name].validate !== null && row[column.name].validate === false\r\n                                }\"\r\n                            >\r\n                                <mat-icon *ngIf=\"row[column.name].validate === null\" [ngClass]=\"'cursor-default'\"\r\n                                    >hourglass_empty</mat-icon\r\n                                >\r\n                                <mat-icon *ngIf=\"row[column.name].validate === true\">check_circle</mat-icon>\r\n                                <mat-icon\r\n                                    *ngIf=\"row[column.name].validate === false\"\r\n                                    (click)=\"\r\n                                        dataSource.onClickCell(row[column.name].inputId, row[column.name].productId)\r\n                                    \"\r\n                                    >cancel</mat-icon\r\n                                >\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </td>\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n        <tr\r\n            mat-header-row\r\n            *matHeaderRowDef=\"dataSource.tableHeader.displayCategoriesColumns; sticky: isSticky()\"\r\n            class=\"border-split-category-section\"\r\n        ></tr>\r\n        <tr\r\n            mat-header-row\r\n            *matHeaderRowDef=\"dataSource.tableHeader.displayColumns; sticky: isSticky()\"\r\n            class=\"headers\"\r\n        ></tr>\r\n        <tr\r\n            mat-row\r\n            [ngClass]=\"getRowClassName(row)\"\r\n            *matRowDef=\"let row; columns: dataSource.tableHeader.displayColumns\"\r\n        ></tr>\r\n    </table>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-694251be2af88253c00a24519ecf3ba1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app.module.routing';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { TableModule } from './feature/table/table.module';\n\n// import { LayoutModule } from './core/components/layout/layout.module';\nimport { TableBasicComponent } from './feature/table/table.component';\nimport { DemoMaterialModule } from './material.module';\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [\n        TableModule,\n        // LayoutModule,\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        DemoMaterialModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "DemoMaterialModule"
                        },
                        {
                            "name": "TableModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-f62aa775e2505a6bd37d88bb7d1e5039",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n// import { LayoutComponent } from './core/components/layout/layout.component';\r\nimport { ErrorModule } from './feature/error/error.module';\r\nimport { PageNotFoundModule } from './feature/page-not-found/page-not-found.module';\r\n// import { TableBasicExample } from './feature/table/table.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        // path: '',\r\n        // loadChildren: () =>\r\n        //     import('./feature/table/table.module').then((m) => m.TableModule)\r\n        // component: LayoutComponent,\r\n        // children: [\r\n        //     { path: '', redirectTo: 'table', pathMatch: 'full' },\r\n        //     {\r\n\r\n        //     }\r\n        // ]\r\n        path: 'table',\r\n        loadChildren: () => \"import('./feature/table/table.module').then((m) => m.TableModule)\"\r\n    },\r\n    { path: 'ejemplo', loadChildren: () => \"import('./feature/ejemplo/ejemplo.module').then((m) => m.EjemploModule)\" },\r\n    { path: 'error', loadChildren: () => ErrorModule },\r\n    { path: '404', loadChildren: () => PageNotFoundModule },\r\n    { path: '**', redirectTo: '404' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DemoMaterialModule",
            "id": "module-DemoMaterialModule-2511ebd9d68111d253dbda9e3fc0bd7a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/material.module.ts",
            "methods": [],
            "sourceCode": "import { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n    exports: [\r\n        A11yModule,\r\n        CdkStepperModule,\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        DragDropModule,\r\n\r\n        ScrollingModule,\r\n\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDividerModule,\r\n        MatFormFieldModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatTooltipModule,\r\n        MatInputModule,\r\n        MatTableModule\r\n    ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n/**  Copyright 2018 Google Inc. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EjemploModule",
            "id": "module-EjemploModule-e91f02d21ef616191a17cf32c75bb3f3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/feature/ejemplo/ejemplo.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TableModule } from '../table/table.module';\r\nimport { EjemploRoutingModule } from './ejemplo-routing.module';\r\nimport { EjemploComponent } from './ejemplo.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, EjemploRoutingModule, TableModule],\r\n    declarations: [EjemploComponent]\r\n})\r\nexport class EjemploModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EjemploComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "EjemploRoutingModule"
                        },
                        {
                            "name": "TableModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EjemploRoutingModule",
            "id": "module-EjemploRoutingModule-212b6cea485c47b2a6bf714e12e07f40",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/feature/ejemplo/ejemplo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EjemploComponent } from './ejemplo.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: EjemploComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class EjemploRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ErrorModule",
            "id": "module-ErrorModule-adfa0e4818039778c7a40c010dfa303a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/feature/error/error.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ErrorComponent } from './error.component';\r\nimport { ErrorRoutingModule } from './error.routing';\r\n\r\n@NgModule({\r\n    imports:[CommonModule, ErrorRoutingModule],\r\n    declarations:[ErrorComponent]\r\n})\r\nexport class ErrorModule{}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ErrorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ErrorRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ErrorRoutingModule",
            "id": "module-ErrorRoutingModule-20e40b0584bb5b09adc5f643e0afca36",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/feature/error/error.routing.ts",
            "methods": [],
            "sourceCode": "import { Route, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { ErrorComponent } from './error.component';\r\n\r\nexport const ErrorRoutes: Route[] = [{ path: '', component: ErrorComponent }];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(ErrorRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ErrorRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PageNotFoundModule",
            "id": "module-PageNotFoundModule-786fadd43406553c423eaaba893947af",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/feature/page-not-found/page-not-found.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PageNotFoundComponent } from './page-not-found.component';\r\nimport { PageNotFoundRoutingModule } from './page-not-found.routing';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, PageNotFoundRoutingModule],\r\n    exports: [],\r\n    declarations: [PageNotFoundComponent],\r\n    providers: []\r\n})\r\nexport class PageNotFoundModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PageNotFoundComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PageNotFoundRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PageNotFoundRoutingModule",
            "id": "module-PageNotFoundRoutingModule-ba4f0c82aea9463e3a78ac1f3ac07054",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/feature/page-not-found/page-not-found.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Route } from '@angular/router';\r\nimport { PageNotFoundComponent } from './page-not-found.component';\r\n\r\nexport const PageNotFoundRoutes: Route[] = [\r\n    { path: '', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(PageNotFoundRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class PageNotFoundRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-46c650183f62a91c73a1fde4ffdd9656",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "// src/app/shared/shared.module.ts\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    declarations: [],\n    imports: [CommonModule],\n    exports: [] // ? added\n})\nexport class SharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TableModule",
            "id": "module-TableModule-780e2b1b0c557dd7c57b1329cd8dedf8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/feature/table/table.module.ts",
            "methods": [],
            "sourceCode": "import { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TableBasicComponent } from './table.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { TableRoutingModule } from './table-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TooltipIfTruncatedDirective } from './directives/tooltip-if-truncated.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TableRoutingModule,\r\n        MatTableModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatTooltipModule,\r\n        FormsModule\r\n    ],\r\n    declarations: [TableBasicComponent, TooltipIfTruncatedDirective],\r\n    exports: [TableBasicComponent]\r\n})\r\nexport class TableModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TableBasicComponent"
                        },
                        {
                            "name": "TooltipIfTruncatedDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TableRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TableBasicComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TableRoutingModule",
            "id": "module-TableRoutingModule-157bc53c20c81880849ea5f4b8612bc8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/feature/table/table-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TableBasicComponent } from './table.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: TableBasicComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class TableRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n}"
            },
            {
                "name": "ErrorRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feature/error/error.routing.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[{ path: '', component: ErrorComponent }]"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "mockCellCompare",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feature/table/test/mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    { productId: 27, runTypeId: 7, inputId: 2, sourceModelParamId: 69, targetModelParamId: 69 },\r\n    { productId: 27, runTypeId: 7, inputId: 3, sourceModelParamId: 70, targetModelParamId: 70 },\r\n    { productId: 27, runTypeId: 7, inputId: 7, sourceModelParamId: 69, targetModelParamId: 69 },\r\n    { productId: 31, runTypeId: 7, inputId: 1, sourceModelParamId: 99, targetModelParamId: 99 },\r\n    { productId: 31, runTypeId: 7, inputId: 2, sourceModelParamId: 98, targetModelParamId: 98 },\r\n    { productId: 31, runTypeId: 7, inputId: 7, sourceModelParamId: 100, targetModelParamId: 100 },\r\n    { productId: 31, runTypeId: 7, inputId: 8, sourceModelParamId: 92, targetModelParamId: 92 },\r\n    { productId: 31, runTypeId: 7, inputId: 9, sourceModelParamId: 101, targetModelParamId: 301 },\r\n    { productId: 31, runTypeId: 7, inputId: 10, sourceModelParamId: 103, targetModelParamId: 103 },\r\n    { productId: 31, runTypeId: 7, inputId: 11, sourceModelParamId: 102, targetModelParamId: 102 },\r\n    { productId: 31, runTypeId: 7, inputId: 12, sourceModelParamId: 104, targetModelParamId: 104 },\r\n    { productId: 31, runTypeId: 7, inputId: 13, sourceModelParamId: 94, targetModelParamId: 154 },\r\n    { productId: 31, runTypeId: 7, inputId: 14, sourceModelParamId: 93, targetModelParamId: 93 },\r\n    { productId: 31, runTypeId: 7, inputId: 15, sourceModelParamId: 95, targetModelParamId: 95 },\r\n    { productId: 31, runTypeId: 7, inputId: 16, sourceModelParamId: 97, targetModelParamId: 97 },\r\n    { productId: 31, runTypeId: 7, inputId: 17, sourceModelParamId: 96, targetModelParamId: 96 },\r\n    { productId: 32, runTypeId: 7, inputId: 1, sourceModelParamId: 106, targetModelParamId: 178 },\r\n    { productId: 32, runTypeId: 7, inputId: 2, sourceModelParamId: 105, targetModelParamId: 105 },\r\n    { productId: 32, runTypeId: 7, inputId: 8, sourceModelParamId: 109, targetModelParamId: 109 },\r\n    { productId: 32, runTypeId: 7, inputId: 9, sourceModelParamId: 111, targetModelParamId: 111 },\r\n    { productId: 32, runTypeId: 7, inputId: 10, sourceModelParamId: 110, targetModelParamId: 110 },\r\n    { productId: 32, runTypeId: 7, inputId: 11, sourceModelParamId: 102, targetModelParamId: 102 },\r\n    { productId: 32, runTypeId: 7, inputId: 12, sourceModelParamId: 112, targetModelParamId: 112 },\r\n    { productId: 32, runTypeId: 7, inputId: 13, sourceModelParamId: 94, targetModelParamId: 99 },\r\n    { productId: 32, runTypeId: 7, inputId: 14, sourceModelParamId: 93, targetModelParamId: 93 },\r\n    { productId: 32, runTypeId: 7, inputId: 15, sourceModelParamId: 95, targetModelParamId: 95 },\r\n    { productId: 32, runTypeId: 7, inputId: 16, sourceModelParamId: 97, targetModelParamId: 97 },\r\n    { productId: 32, runTypeId: 7, inputId: 17, sourceModelParamId: 96, targetModelParamId: 96 },\r\n    { productId: 33, runTypeId: 7, inputId: 1, sourceModelParamId: 106, targetModelParamId: 106 },\r\n    { productId: 33, runTypeId: 7, inputId: 2, sourceModelParamId: 105, targetModelParamId: 111 },\r\n    { productId: 33, runTypeId: 7, inputId: 7, sourceModelParamId: 107, targetModelParamId: 107 },\r\n    { productId: 33, runTypeId: 7, inputId: 8, sourceModelParamId: 108, targetModelParamId: 108 },\r\n    { productId: 33, runTypeId: 7, inputId: 9, sourceModelParamId: 101, targetModelParamId: 101 },\r\n    { productId: 33, runTypeId: 7, inputId: 10, sourceModelParamId: 103, targetModelParamId: 103 },\r\n    { productId: 33, runTypeId: 7, inputId: 11, sourceModelParamId: 102, targetModelParamId: 102 },\r\n    { productId: 33, runTypeId: 7, inputId: 12, sourceModelParamId: 104, targetModelParamId: 104 },\r\n    { productId: 33, runTypeId: 7, inputId: 13, sourceModelParamId: 94, targetModelParamId: 56 },\r\n    { productId: 33, runTypeId: 7, inputId: 14, sourceModelParamId: 93, targetModelParamId: 93 },\r\n    { productId: 33, runTypeId: 7, inputId: 15, sourceModelParamId: 95, targetModelParamId: 95 },\r\n    { productId: 33, runTypeId: 7, inputId: 16, sourceModelParamId: 97, targetModelParamId: 97 },\r\n    { productId: 33, runTypeId: 7, inputId: 1, sourceModelParamId: 96, targetModelParamId: 967 }\r\n]"
            },
            {
                "name": "mockCells",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feature/table/test/mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    { productId: 27, runTypeId: 7, modelParamId: 69, inputId: 2 },\r\n    { productId: 27, runTypeId: 7, modelParamId: 70, inputId: 3 },\r\n    { productId: 27, runTypeId: 7, modelParamId: 69, inputId: 7 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 99, inputId: 1 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 98, inputId: 2 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 100, inputId: 7 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 92, inputId: 8 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 101, inputId: 9 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 103, inputId: 10 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 102, inputId: 11 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 104, inputId: 12 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 94, inputId: 13 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 93, inputId: 14 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 95, inputId: 15 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 97, inputId: 16 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 96, inputId: 17 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 106, inputId: 1 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 105, inputId: 2 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 109, inputId: 8 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 111, inputId: 9 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 110, inputId: 10 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 102, inputId: 11 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 112, inputId: 12 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 94, inputId: 13 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 93, inputId: 14 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 95, inputId: 15 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 97, inputId: 16 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 96, inputId: 17 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 106, inputId: 1 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 105, inputId: 2 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 107, inputId: 7 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 108, inputId: 8 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 101, inputId: 9 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 103, inputId: 10 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 102, inputId: 11 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 104, inputId: 12 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 94, inputId: 13 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 93, inputId: 14 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 95, inputId: 15 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 97, inputId: 16 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 96, inputId: 17 }\r\n]"
            },
            {
                "name": "mockInputs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feature/table/test/mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n        id: 1,\r\n        name: 'MortalityRatesMale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'MortalityRatesFemale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    { id: 7, name: 'LapseRates', typeId: 1, categoryName: 'SomeCategory' },\r\n    { id: 8, name: 'ProductValues', typeId: 1, categoryName: 'SomeCategory' },\r\n    { id: 9, name: 'Gamma', typeId: 1, categoryName: 'SomeCategory' },\r\n    { id: 10, name: 'AlphaGamma', typeId: 1, categoryName: 'SomeCategory' },\r\n    { id: 11, name: 'PolicyFees', typeId: 1, categoryName: 'SomeCategory' },\r\n    { id: 12, name: 'SurrenderFactor', typeId: 1, categoryName: 'SomeCategory' },\r\n    {\r\n        id: 13,\r\n        name: 'ExperiencedMortalityRatesMale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 14,\r\n        name: 'ExperiencedMortalityRatesFemale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 15,\r\n        name: 'TechnicalInterestRates',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 16,\r\n        name: 'AgeAdjustmentsMale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 17,\r\n        name: 'AgeAdjustmentsFemale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 18,\r\n        name: 'MathsReserveBonusPercentage',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 19,\r\n        name: 'RecoveryRatesMale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 20,\r\n        name: 'RecoveryRatesFemale',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 21,\r\n        name: 'ClaimMortalityRatesMale',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 22,\r\n        name: 'ClaimMortalityRatesFemale',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    { id: 23, name: 'InceptionRatesMale', typeId: 1, categoryName: 'Category A' },\r\n    {\r\n        id: 24,\r\n        name: 'InceptionRatesFemale',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 25,\r\n        name: 'ExperiencedInceptionRatesMale',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 26,\r\n        name: 'ExperiencedInceptionRatesFemale',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 27,\r\n        name: 'ProfitSharePercentage',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 28,\r\n        name: 'ProfitSharePercentageRider',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    { id: 29, name: 'MultiplierAnsatz', typeId: 1, categoryName: 'Category A' },\r\n    { id: 30, name: 'Alpha', typeId: 1, categoryName: 'Category A' },\r\n    {\r\n        id: 31,\r\n        name: 'ProfitSharingPremiumPercentage',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    { id: 32, name: 'MortalityFactors', typeId: 1, categoryName: 'Category A' },\r\n    {\r\n        id: 33,\r\n        name: 'AdditionalReserveFactors',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    { id: 34, name: 'AdvisorSurcharges', typeId: 1, categoryName: 'Category A' },\r\n    { id: 35, name: 'AssumptionValues', typeId: 1, categoryName: 'Category A' },\r\n    {\r\n        id: 36,\r\n        name: 'DepositAccountInterestRate',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    { id: 38, name: 'MortalityEndAges', typeId: 1, categoryName: 'Category A' },\r\n    {\r\n        id: 39,\r\n        name: 'MortalitySelectFactors',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 40,\r\n        name: 'NonGuaranteedBonusPercentages',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 41,\r\n        name: 'ReferenceValueFactorPercentages',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 42,\r\n        name: 'ReferenceValueOfBonusRates',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 43,\r\n        name: 'ReferenceValueOfChargeRates',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 44,\r\n        name: 'RunSetup',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 45,\r\n        name: 'SinglePremiumRatingFactorsFemale',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 46,\r\n        name: 'SinglePremiumRatingFactorsHeaders',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 47,\r\n        name: 'SinglePremiumRatingFactorsMale',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 48,\r\n        name: 'SumAssuredFactors',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 49,\r\n        name: 'SumAssuredThresholds',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 50,\r\n        name: 'SurrenderFactor1',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 51,\r\n        name: 'SurrenderFactor2',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 52,\r\n        name: 'TariffMapping',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 53,\r\n        name: 'TerminalCostDistributionTerm',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    { id: 54, name: 'Beta', typeId: 1, categoryName: 'ModelParameters' },\r\n    {\r\n        id: 55,\r\n        name: 'PartPaymentPercentages',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 56,\r\n        name: 'PartPaymentYears',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    { id: 57, name: 'PupFactor', typeId: 1, categoryName: 'ModelParameters' },\r\n    {\r\n        id: 58,\r\n        name: 'ZzrDiscountRates',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 59,\r\n        name: 'ZzrScalingFactors',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 60,\r\n        name: 'MaximumZillmerTerm',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 61,\r\n        name: 'TerminalBonusPercentages',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 62,\r\n        name: 'TerminalBonusPercentagesRider',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 63,\r\n        name: 'CommissionPercentages',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 64,\r\n        name: 'SurrenderValuePercentages',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 65,\r\n        name: 'SurrenderValuePercentagesRider',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 66,\r\n        name: 'ExpenseAssumptions',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    { id: 67, name: 'LapseRatesRsv', typeId: 1, categoryName: 'ModelParameters' },\r\n    {\r\n        id: 68,\r\n        name: 'ScalingFactors',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 69,\r\n        name: 'LapseRatesUpShock',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 70,\r\n        name: 'LapseRatesDownShock',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 71,\r\n        name: 'BalanceSheetReserveHgb',\r\n        typeId: 1,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    {\r\n        id: 72,\r\n        name: 'InputForwardRateYieldCurve',\r\n        typeId: 1,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    {\r\n        id: 73,\r\n        name: 'AnnualAverageYield',\r\n        typeId: 1,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    {\r\n        id: 74,\r\n        name: 'ZzrDiscountRateForPreviousYear',\r\n        typeId: 2,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    {\r\n        id: 75,\r\n        name: 'TargetAssetAllocation',\r\n        typeId: 2,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    { id: 76, name: 'AssetExpenseInput', typeId: 2, categoryName: 'Assumptions' },\r\n    {\r\n        id: 77,\r\n        name: 'ShareholderReplenishmentSplit',\r\n        typeId: 2,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    {\r\n        id: 78,\r\n        name: 'AssetExpenseShockInput',\r\n        typeId: 2,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    {\r\n        id: 79,\r\n        name: 'ManagementModel',\r\n        typeId: 1,\r\n        categoryName: 'Assumptions'\r\n    }\r\n]"
            },
            {
                "name": "mockProducts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feature/table/test/mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    { id: 27, name: 'D_HL_RENRP', categoryName: 'Unit Linked' },\r\n    { id: 28, name: 'D_HL_RENSP', categoryName: 'Unit Linked' },\r\n    { id: 29, name: 'DRENRP', categoryName: 'Unit Linked' },\r\n    { id: 30, name: 'DRENSP', categoryName: 'Unit Linked' },\r\n    { id: 31, name: 'D_HL_KAOTH', categoryName: 'Unit Linked' },\r\n    { id: 32, name: 'DKAGRU', categoryName: 'Unit Linked' },\r\n    { id: 33, name: 'DKAOTH', categoryName: 'Unit Linked' },\r\n    { id: 34, name: 'DKAVBG', categoryName: 'Unit Linked' },\r\n    { id: 35, name: 'P_BUN', categoryName: 'Unit Linked' },\r\n    { id: 36, name: 'P_HL_BUN', categoryName: 'Unit Linked' },\r\n    { id: 37, name: 'D_HL_RISK', categoryName: 'Unit Linked' },\r\n    { id: 38, name: 'D_RISK', categoryName: 'Unit Linked' },\r\n    { id: 39, name: 'D_RSV', categoryName: 'Unit Linked' },\r\n    { id: 40, name: 'D_FRV', categoryName: 'Non Unit Linked' },\r\n    { id: 41, name: 'D_HL_FRV', categoryName: 'Non Unit Linked' },\r\n    { id: 42, name: 'D_HL_FLV97', categoryName: 'Non Unit Linked' },\r\n    { id: 43, name: 'DFLV97', categoryName: 'Non Unit Linked' }\r\n]"
            },
            {
                "name": "mockTableConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feature/table/test/mock-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ stickyColumns: ['input_category', 'input_name'] }"
            },
            {
                "name": "PageNotFoundRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feature/page-not-found/page-not-found.routing.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n    { path: '', component: PageNotFoundComponent }\r\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "CellType",
                "childs": [
                    {
                        "name": "Category",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Input",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "EmptyCell",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Cell",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/feature/table/interfaces/table-data.interface.ts"
            },
            {
                "name": "TableMode",
                "childs": [
                    {
                        "name": "ReadOnly",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Edit",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Validate",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/feature/table/interfaces/table-data.interface.ts"
            },
            {
                "name": "TableSpreedData",
                "childs": [
                    {
                        "name": "Edit",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Insert",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "View",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/feature/table/services/table.service.ts"
            }
        ],
        "groupedVariables": {
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n}"
                }
            ],
            "src/app/feature/error/error.routing.ts": [
                {
                    "name": "ErrorRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feature/error/error.routing.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[{ path: '', component: ErrorComponent }]"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/feature/table/test/mock-data.ts": [
                {
                    "name": "mockCellCompare",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feature/table/test/mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    { productId: 27, runTypeId: 7, inputId: 2, sourceModelParamId: 69, targetModelParamId: 69 },\r\n    { productId: 27, runTypeId: 7, inputId: 3, sourceModelParamId: 70, targetModelParamId: 70 },\r\n    { productId: 27, runTypeId: 7, inputId: 7, sourceModelParamId: 69, targetModelParamId: 69 },\r\n    { productId: 31, runTypeId: 7, inputId: 1, sourceModelParamId: 99, targetModelParamId: 99 },\r\n    { productId: 31, runTypeId: 7, inputId: 2, sourceModelParamId: 98, targetModelParamId: 98 },\r\n    { productId: 31, runTypeId: 7, inputId: 7, sourceModelParamId: 100, targetModelParamId: 100 },\r\n    { productId: 31, runTypeId: 7, inputId: 8, sourceModelParamId: 92, targetModelParamId: 92 },\r\n    { productId: 31, runTypeId: 7, inputId: 9, sourceModelParamId: 101, targetModelParamId: 301 },\r\n    { productId: 31, runTypeId: 7, inputId: 10, sourceModelParamId: 103, targetModelParamId: 103 },\r\n    { productId: 31, runTypeId: 7, inputId: 11, sourceModelParamId: 102, targetModelParamId: 102 },\r\n    { productId: 31, runTypeId: 7, inputId: 12, sourceModelParamId: 104, targetModelParamId: 104 },\r\n    { productId: 31, runTypeId: 7, inputId: 13, sourceModelParamId: 94, targetModelParamId: 154 },\r\n    { productId: 31, runTypeId: 7, inputId: 14, sourceModelParamId: 93, targetModelParamId: 93 },\r\n    { productId: 31, runTypeId: 7, inputId: 15, sourceModelParamId: 95, targetModelParamId: 95 },\r\n    { productId: 31, runTypeId: 7, inputId: 16, sourceModelParamId: 97, targetModelParamId: 97 },\r\n    { productId: 31, runTypeId: 7, inputId: 17, sourceModelParamId: 96, targetModelParamId: 96 },\r\n    { productId: 32, runTypeId: 7, inputId: 1, sourceModelParamId: 106, targetModelParamId: 178 },\r\n    { productId: 32, runTypeId: 7, inputId: 2, sourceModelParamId: 105, targetModelParamId: 105 },\r\n    { productId: 32, runTypeId: 7, inputId: 8, sourceModelParamId: 109, targetModelParamId: 109 },\r\n    { productId: 32, runTypeId: 7, inputId: 9, sourceModelParamId: 111, targetModelParamId: 111 },\r\n    { productId: 32, runTypeId: 7, inputId: 10, sourceModelParamId: 110, targetModelParamId: 110 },\r\n    { productId: 32, runTypeId: 7, inputId: 11, sourceModelParamId: 102, targetModelParamId: 102 },\r\n    { productId: 32, runTypeId: 7, inputId: 12, sourceModelParamId: 112, targetModelParamId: 112 },\r\n    { productId: 32, runTypeId: 7, inputId: 13, sourceModelParamId: 94, targetModelParamId: 99 },\r\n    { productId: 32, runTypeId: 7, inputId: 14, sourceModelParamId: 93, targetModelParamId: 93 },\r\n    { productId: 32, runTypeId: 7, inputId: 15, sourceModelParamId: 95, targetModelParamId: 95 },\r\n    { productId: 32, runTypeId: 7, inputId: 16, sourceModelParamId: 97, targetModelParamId: 97 },\r\n    { productId: 32, runTypeId: 7, inputId: 17, sourceModelParamId: 96, targetModelParamId: 96 },\r\n    { productId: 33, runTypeId: 7, inputId: 1, sourceModelParamId: 106, targetModelParamId: 106 },\r\n    { productId: 33, runTypeId: 7, inputId: 2, sourceModelParamId: 105, targetModelParamId: 111 },\r\n    { productId: 33, runTypeId: 7, inputId: 7, sourceModelParamId: 107, targetModelParamId: 107 },\r\n    { productId: 33, runTypeId: 7, inputId: 8, sourceModelParamId: 108, targetModelParamId: 108 },\r\n    { productId: 33, runTypeId: 7, inputId: 9, sourceModelParamId: 101, targetModelParamId: 101 },\r\n    { productId: 33, runTypeId: 7, inputId: 10, sourceModelParamId: 103, targetModelParamId: 103 },\r\n    { productId: 33, runTypeId: 7, inputId: 11, sourceModelParamId: 102, targetModelParamId: 102 },\r\n    { productId: 33, runTypeId: 7, inputId: 12, sourceModelParamId: 104, targetModelParamId: 104 },\r\n    { productId: 33, runTypeId: 7, inputId: 13, sourceModelParamId: 94, targetModelParamId: 56 },\r\n    { productId: 33, runTypeId: 7, inputId: 14, sourceModelParamId: 93, targetModelParamId: 93 },\r\n    { productId: 33, runTypeId: 7, inputId: 15, sourceModelParamId: 95, targetModelParamId: 95 },\r\n    { productId: 33, runTypeId: 7, inputId: 16, sourceModelParamId: 97, targetModelParamId: 97 },\r\n    { productId: 33, runTypeId: 7, inputId: 1, sourceModelParamId: 96, targetModelParamId: 967 }\r\n]"
                },
                {
                    "name": "mockCells",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feature/table/test/mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    { productId: 27, runTypeId: 7, modelParamId: 69, inputId: 2 },\r\n    { productId: 27, runTypeId: 7, modelParamId: 70, inputId: 3 },\r\n    { productId: 27, runTypeId: 7, modelParamId: 69, inputId: 7 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 99, inputId: 1 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 98, inputId: 2 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 100, inputId: 7 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 92, inputId: 8 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 101, inputId: 9 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 103, inputId: 10 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 102, inputId: 11 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 104, inputId: 12 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 94, inputId: 13 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 93, inputId: 14 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 95, inputId: 15 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 97, inputId: 16 },\r\n    { productId: 31, runTypeId: 7, modelParamId: 96, inputId: 17 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 106, inputId: 1 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 105, inputId: 2 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 109, inputId: 8 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 111, inputId: 9 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 110, inputId: 10 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 102, inputId: 11 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 112, inputId: 12 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 94, inputId: 13 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 93, inputId: 14 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 95, inputId: 15 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 97, inputId: 16 },\r\n    { productId: 32, runTypeId: 7, modelParamId: 96, inputId: 17 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 106, inputId: 1 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 105, inputId: 2 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 107, inputId: 7 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 108, inputId: 8 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 101, inputId: 9 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 103, inputId: 10 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 102, inputId: 11 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 104, inputId: 12 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 94, inputId: 13 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 93, inputId: 14 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 95, inputId: 15 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 97, inputId: 16 },\r\n    { productId: 33, runTypeId: 7, modelParamId: 96, inputId: 17 }\r\n]"
                },
                {
                    "name": "mockInputs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feature/table/test/mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n        id: 1,\r\n        name: 'MortalityRatesMale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'MortalityRatesFemale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    { id: 7, name: 'LapseRates', typeId: 1, categoryName: 'SomeCategory' },\r\n    { id: 8, name: 'ProductValues', typeId: 1, categoryName: 'SomeCategory' },\r\n    { id: 9, name: 'Gamma', typeId: 1, categoryName: 'SomeCategory' },\r\n    { id: 10, name: 'AlphaGamma', typeId: 1, categoryName: 'SomeCategory' },\r\n    { id: 11, name: 'PolicyFees', typeId: 1, categoryName: 'SomeCategory' },\r\n    { id: 12, name: 'SurrenderFactor', typeId: 1, categoryName: 'SomeCategory' },\r\n    {\r\n        id: 13,\r\n        name: 'ExperiencedMortalityRatesMale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 14,\r\n        name: 'ExperiencedMortalityRatesFemale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 15,\r\n        name: 'TechnicalInterestRates',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 16,\r\n        name: 'AgeAdjustmentsMale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 17,\r\n        name: 'AgeAdjustmentsFemale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 18,\r\n        name: 'MathsReserveBonusPercentage',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 19,\r\n        name: 'RecoveryRatesMale',\r\n        typeId: 1,\r\n        categoryName: 'SomeCategory'\r\n    },\r\n    {\r\n        id: 20,\r\n        name: 'RecoveryRatesFemale',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 21,\r\n        name: 'ClaimMortalityRatesMale',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 22,\r\n        name: 'ClaimMortalityRatesFemale',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    { id: 23, name: 'InceptionRatesMale', typeId: 1, categoryName: 'Category A' },\r\n    {\r\n        id: 24,\r\n        name: 'InceptionRatesFemale',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 25,\r\n        name: 'ExperiencedInceptionRatesMale',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 26,\r\n        name: 'ExperiencedInceptionRatesFemale',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 27,\r\n        name: 'ProfitSharePercentage',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 28,\r\n        name: 'ProfitSharePercentageRider',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    { id: 29, name: 'MultiplierAnsatz', typeId: 1, categoryName: 'Category A' },\r\n    { id: 30, name: 'Alpha', typeId: 1, categoryName: 'Category A' },\r\n    {\r\n        id: 31,\r\n        name: 'ProfitSharingPremiumPercentage',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    { id: 32, name: 'MortalityFactors', typeId: 1, categoryName: 'Category A' },\r\n    {\r\n        id: 33,\r\n        name: 'AdditionalReserveFactors',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    { id: 34, name: 'AdvisorSurcharges', typeId: 1, categoryName: 'Category A' },\r\n    { id: 35, name: 'AssumptionValues', typeId: 1, categoryName: 'Category A' },\r\n    {\r\n        id: 36,\r\n        name: 'DepositAccountInterestRate',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    { id: 38, name: 'MortalityEndAges', typeId: 1, categoryName: 'Category A' },\r\n    {\r\n        id: 39,\r\n        name: 'MortalitySelectFactors',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 40,\r\n        name: 'NonGuaranteedBonusPercentages',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 41,\r\n        name: 'ReferenceValueFactorPercentages',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 42,\r\n        name: 'ReferenceValueOfBonusRates',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 43,\r\n        name: 'ReferenceValueOfChargeRates',\r\n        typeId: 1,\r\n        categoryName: 'Category A'\r\n    },\r\n    {\r\n        id: 44,\r\n        name: 'RunSetup',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 45,\r\n        name: 'SinglePremiumRatingFactorsFemale',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 46,\r\n        name: 'SinglePremiumRatingFactorsHeaders',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 47,\r\n        name: 'SinglePremiumRatingFactorsMale',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 48,\r\n        name: 'SumAssuredFactors',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 49,\r\n        name: 'SumAssuredThresholds',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 50,\r\n        name: 'SurrenderFactor1',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 51,\r\n        name: 'SurrenderFactor2',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 52,\r\n        name: 'TariffMapping',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 53,\r\n        name: 'TerminalCostDistributionTerm',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    { id: 54, name: 'Beta', typeId: 1, categoryName: 'ModelParameters' },\r\n    {\r\n        id: 55,\r\n        name: 'PartPaymentPercentages',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 56,\r\n        name: 'PartPaymentYears',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    { id: 57, name: 'PupFactor', typeId: 1, categoryName: 'ModelParameters' },\r\n    {\r\n        id: 58,\r\n        name: 'ZzrDiscountRates',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 59,\r\n        name: 'ZzrScalingFactors',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 60,\r\n        name: 'MaximumZillmerTerm',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 61,\r\n        name: 'TerminalBonusPercentages',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 62,\r\n        name: 'TerminalBonusPercentagesRider',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 63,\r\n        name: 'CommissionPercentages',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 64,\r\n        name: 'SurrenderValuePercentages',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 65,\r\n        name: 'SurrenderValuePercentagesRider',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 66,\r\n        name: 'ExpenseAssumptions',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    { id: 67, name: 'LapseRatesRsv', typeId: 1, categoryName: 'ModelParameters' },\r\n    {\r\n        id: 68,\r\n        name: 'ScalingFactors',\r\n        typeId: 1,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 69,\r\n        name: 'LapseRatesUpShock',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 70,\r\n        name: 'LapseRatesDownShock',\r\n        typeId: 2,\r\n        categoryName: 'ModelParameters'\r\n    },\r\n    {\r\n        id: 71,\r\n        name: 'BalanceSheetReserveHgb',\r\n        typeId: 1,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    {\r\n        id: 72,\r\n        name: 'InputForwardRateYieldCurve',\r\n        typeId: 1,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    {\r\n        id: 73,\r\n        name: 'AnnualAverageYield',\r\n        typeId: 1,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    {\r\n        id: 74,\r\n        name: 'ZzrDiscountRateForPreviousYear',\r\n        typeId: 2,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    {\r\n        id: 75,\r\n        name: 'TargetAssetAllocation',\r\n        typeId: 2,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    { id: 76, name: 'AssetExpenseInput', typeId: 2, categoryName: 'Assumptions' },\r\n    {\r\n        id: 77,\r\n        name: 'ShareholderReplenishmentSplit',\r\n        typeId: 2,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    {\r\n        id: 78,\r\n        name: 'AssetExpenseShockInput',\r\n        typeId: 2,\r\n        categoryName: 'Assumptions'\r\n    },\r\n    {\r\n        id: 79,\r\n        name: 'ManagementModel',\r\n        typeId: 1,\r\n        categoryName: 'Assumptions'\r\n    }\r\n]"
                },
                {
                    "name": "mockProducts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feature/table/test/mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    { id: 27, name: 'D_HL_RENRP', categoryName: 'Unit Linked' },\r\n    { id: 28, name: 'D_HL_RENSP', categoryName: 'Unit Linked' },\r\n    { id: 29, name: 'DRENRP', categoryName: 'Unit Linked' },\r\n    { id: 30, name: 'DRENSP', categoryName: 'Unit Linked' },\r\n    { id: 31, name: 'D_HL_KAOTH', categoryName: 'Unit Linked' },\r\n    { id: 32, name: 'DKAGRU', categoryName: 'Unit Linked' },\r\n    { id: 33, name: 'DKAOTH', categoryName: 'Unit Linked' },\r\n    { id: 34, name: 'DKAVBG', categoryName: 'Unit Linked' },\r\n    { id: 35, name: 'P_BUN', categoryName: 'Unit Linked' },\r\n    { id: 36, name: 'P_HL_BUN', categoryName: 'Unit Linked' },\r\n    { id: 37, name: 'D_HL_RISK', categoryName: 'Unit Linked' },\r\n    { id: 38, name: 'D_RISK', categoryName: 'Unit Linked' },\r\n    { id: 39, name: 'D_RSV', categoryName: 'Unit Linked' },\r\n    { id: 40, name: 'D_FRV', categoryName: 'Non Unit Linked' },\r\n    { id: 41, name: 'D_HL_FRV', categoryName: 'Non Unit Linked' },\r\n    { id: 42, name: 'D_HL_FLV97', categoryName: 'Non Unit Linked' },\r\n    { id: 43, name: 'DFLV97', categoryName: 'Non Unit Linked' }\r\n]"
                },
                {
                    "name": "mockTableConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feature/table/test/mock-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ stickyColumns: ['input_category', 'input_name'] }"
                }
            ],
            "src/app/feature/page-not-found/page-not-found.routing.ts": [
                {
                    "name": "PageNotFoundRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feature/page-not-found/page-not-found.routing.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n    { path: '', component: PageNotFoundComponent }\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/feature/table/interfaces/table-data.interface.ts": [
                {
                    "name": "CellType",
                    "childs": [
                        {
                            "name": "Category",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Input",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "EmptyCell",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Cell",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/feature/table/interfaces/table-data.interface.ts"
                },
                {
                    "name": "TableMode",
                    "childs": [
                        {
                            "name": "ReadOnly",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Edit",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Validate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/feature/table/interfaces/table-data.interface.ts"
                }
            ],
            "src/app/feature/table/services/table.service.ts": [
                {
                    "name": "TableSpreedData",
                    "childs": [
                        {
                            "name": "Edit",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Insert",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "View",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/feature/table/services/table.service.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app.module.routing.ts",
                "module": "AppRoutingModule",
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/ejemplo/ejemplo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EjemploComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/error/error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/error/error.routing.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/page-not-found/page-not-found.routing.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PageNotFoundRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/directives/tooltip-if-truncated.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TooltipIfTruncatedDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/entitites/cell-compare.dto.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICellCompareDto",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/entitites/cell.dto.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICellDto",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/entitites/input.dto.ts",
                "type": "class",
                "linktype": "classe",
                "name": "InputDto",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/entitites/product.dto.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ProductDto",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/interfaces/table-configuration.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "tableConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/interfaces/table-data.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICellDefinition",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/interfaces/table-data.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IInputProductTable",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/interfaces/table-data.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TableData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/interfaces/table-header.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITableHeader",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/interfaces/table-header.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductHeader",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/interfaces/table-header.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RowTable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/interfaces/table.config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProductColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/interfaces/table.config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IStickyColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/interfaces/table.config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITableConfig",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/services/demo-table.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DemoTableService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/services/table.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TableService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableBasicComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/table.datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ProductDataSource",
                "coveragePercent": 8,
                "coverageCount": "4/47",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/test/mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockCellCompare",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/test/mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockCells",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/test/mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockInputs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/test/mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockProducts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feature/table/test/mock-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockTableConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}